# Generated by roxygen2: do not edit by hand

export("%>%")
export(":=")
export(.data)
export(.env)
export(abundance_plt)
export(add_tax)
export(add_var)
export(bake)
export(contains_rarefaction)
export(cool)
export(corr_heatmap)
export(exclusion_plt)
export(export_steps)
export(find_intersections)
export(get_phy)
export(get_tax)
export(get_var)
export(import_steps)
export(intersection_df)
export(intersection_plt)
export(mutual_plt)
export(otu_table)
export(overlap_df)
export(phy_qc)
export(prep)
export(rand_id)
export(read_data)
export(recipe)
export(sample_data)
export(step_aldex)
export(step_ancom)
export(step_corncob)
export(step_deseq)
export(step_filter_taxa)
export(step_lefse)
export(step_maaslin)
export(step_metagenomeseq)
export(step_rarefaction)
export(step_subset_taxa)
export(step_wilcox)
export(steps_ids)
export(tax_table)
export(zero_otu)
exportClasses(prep_recipe)
exportClasses(recipe)
exportMethods(abundance_plt)
exportMethods(add_tax)
exportMethods(add_var)
exportMethods(bake)
exportMethods(cool)
exportMethods(corr_heatmap)
exportMethods(exclusion_plt)
exportMethods(get_phy)
exportMethods(get_tax)
exportMethods(get_var)
exportMethods(intersection_df)
exportMethods(intersection_plt)
exportMethods(mutual_plt)
exportMethods(otu_table)
exportMethods(overlap_df)
exportMethods(phy_qc)
exportMethods(prep)
exportMethods(sample_data)
exportMethods(step_aldex)
exportMethods(step_ancom)
exportMethods(step_corncob)
exportMethods(step_deseq)
exportMethods(step_filter_taxa)
exportMethods(step_lefse)
exportMethods(step_maaslin)
exportMethods(step_metagenomeseq)
exportMethods(step_rarefaction)
exportMethods(step_subset_taxa)
exportMethods(step_wilcox)
exportMethods(tax_table)
exportMethods(zero_otu)
import(dplyr)
import(ggplot2)
importClassesFrom(phyloseq,phyloseq)
importClassesFrom(tibble,tbl_df)
importFrom(UpSetR,upset)
importFrom(generics,required_pkgs)
importFrom(glue,double_quote)
importFrom(heatmaply,heatmaply_cor)
importFrom(magrittr,"%>%")
importFrom(rlang,":=")
importFrom(rlang,.data)
importFrom(rlang,.env)
importFrom(rlang,as_label)
importFrom(rlang,as_name)
importFrom(rlang,enquo)
importFrom(rlang,enquos)
