[{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement fcatala@iriscaixa.es. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dar","title":"Contributing to dar","text":"outlines propose change dar. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to dar","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to dar","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to dar","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"MicrobialGenomics-IrsicaixaOrg/dar\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to dar","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dar","text":"Please note dar project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Francesc Català-Moll Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"an-example","dir":"Articles","previous_headings":"","what":"An Example","title":"Introduction to dar","text":"package contains data set Noguera-Julian, M., et al. 2016 used find differential abundant microbial species among men sex men (MSM) non-MSM (hts). data stored inside object class phyloseq, standard input format creating recipes dar. first load data inspect :","code":"library(dar)  data(\"metaHIV_phy\", package = \"dar\")  metaHIV_phy #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"an-initial-recipe","dir":"Articles","previous_headings":"","what":"An Initial Recipe","title":"Introduction to dar","text":"First, create recipe object original data specify processing differential analysis steps. Recipes can created manually sequentially adding roles variables data set. easiest way create initial recipe : var_info argument corresponds variable considered modeling process tax_info indicates taxonomic level used analyses.","code":"rec_obj <- recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  rec_obj #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"preprocessing-steps","dir":"Articles","previous_headings":"","what":"Preprocessing Steps","title":"Introduction to dar","text":", preprocessing steps step X can added sequentially one two ways: Note step_ancom functions always return updated recipes. two types steps, charge processing (prepro) destined define methods differential analysis (da). prepro steps used modify data loaded recipe used da steps. ‘dar’ package include 3 main preprocessing functionalities. step_subset_taxa: used subsetting columns values within tax_table. step_filter_taxa: used filtering OTUs recipe objects. step_rarefaction: used resample OTU table samples library size. data, can add operation preprocessing data stored initial recpie. First, use step_subset_taxa retain Bacteria Archaea OTUs Kingdom taxonomic level. filter OTUs least 3% samples counts greater 0.","code":"rec_obj <- step_{X}(rec_obj, arguments)    ## or rec_obj <- rec_obj %>% step_{X}(arguments) rec_obj <- rec_obj %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%    step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.03 * length(x))\")    rec_obj #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Shakarbura  #>      ◉ step_filter_taxa() id = filter_taxa__Panzarotti  #>  #> DA steps:"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"differential-analysis","dir":"Articles","previous_headings":"","what":"Differential Analysis","title":"Introduction to dar","text":"Now defined preprocessing input data da methods used, need define . introduction use metagenomeSeq, maaslin2 DESeq2 methods default parameters (defined authors method). ‘dar’ package includes da steps defined . full list:","code":"rec_obj <- rec_obj %>%    step_deseq() %>%    step_metagenomeseq() %>%    step_maaslin()  rec_obj #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Shakarbura  #>      ◉ step_filter_taxa() id = filter_taxa__Panzarotti  #>  #> DA steps: #>  #>      ◉ step_deseq() id = deseq__Sweetheart_cake  #>      ◉ step_metagenomeseq() id = metagenomeseq__Puff_pastry  #>      ◉ step_maaslin() id = maaslin__Bear_claw grep(\"^step_\", ls(\"package:dar\"), value = TRUE) %>%    grep(\"_new|_to_expr|filter|subset|rarefaction\", ., value = TRUE, invert = TRUE) #> [1] \"step_aldex\"         \"step_ancom\"         \"step_corncob\"       #> [4] \"step_deseq\"         \"step_lefse\"         \"step_maaslin\"       #> [7] \"step_metagenomeseq\" \"step_wilcox\""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"prep","dir":"Articles","previous_headings":"","what":"Prep","title":"Introduction to dar","text":"ensure reproducibility consistency generated results, steps defined recipe executed time using prep function. Note resulting object print shows information amount differentially abundant OTUs methods, well number OTUs detected methods (consensus).","code":"da_results <- prep(rec_obj, parallel = TRUE) da_results #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 278 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ deseq__Sweetheart_cake diff_taxa = 166  #>      ✔ metagenomeseq__Puff_pastry diff_taxa = 237  #>      ✔ maaslin__Bear_claw diff_taxa = 205  #>  #>      ℹ 100 taxa are present in all tested methods"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"bake-and-cool","dir":"Articles","previous_headings":"","what":"Bake and cool","title":"Introduction to dar","text":"Now results need extract , however first need define consensus strategy bake. example interested OTUs detected differentially abundant three methods used. Finally can extract table results using cool function.","code":"## Number of used methods count <- steps_ids(da_results, type = \"da\") %>% length()  ## Define the bake  da_results <- bake(da_results, count_cutoff = count) cool(da_results) #> # A tibble: 100 × 2 #>    taxa_id taxa                         #>    <chr>   <chr>                        #>  1 Otu_2   Methanosphaera_stadtmanae    #>  2 Otu_12  Bifidobacterium_animalis     #>  3 Otu_15  Bifidobacterium_catenulatum  #>  4 Otu_34  Olsenella_scatoligenes       #>  5 Otu_35  Collinsella_aerofaciens      #>  6 Otu_38  Enorma_massiliensis          #>  7 Otu_47  Bacteroides_cellulosilyticus #>  8 Otu_48  Bacteroides_clarus           #>  9 Otu_63  Bacteroides_plebeius         #> 10 Otu_69  Bacteroides_sp_CAG_530       #> # … with 90 more rows #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesc Catala-Moll. Author, maintainer.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Catala-Moll F (2022). dar: Differential Abundance Analysis Consensus. https://github.com/MicrobialGenomics-IrsicaixaOrg/dar, https://microbialgenomics-irsicaixaorg.github.io/dar/.","code":"@Manual{,   title = {dar: Differential Abundance Analysis by Consensus},   author = {Francesc Catala-Moll},   year = {2022},   note = {https://github.com/MicrobialGenomics-IrsicaixaOrg/dar, https://microbialgenomics-irsicaixaorg.github.io/dar/}, }"},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Differential Abundance Analysis by Consensus","text":"Differential abundance testing microbiome data challenges parametric non-parametric statistical methods, due sparsity, high variability compositional nature. Microbiome-specific statistical methods often assume classical distribution models take account compositional specifics. produce results range within specificity vs sensitivity space way type type II error difficult ascertain real microbiome data single method used. Recently, consensus approach based multiple differential abundance (DA) methods recently suggested order increase robustness. dar, can use dplyr-like pipeable sequences DA methods apply different consensus strategies. way can obtain reliable results fast, consistent reproducible way.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Differential Abundance Analysis by Consensus","text":"can install development version dar GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"MicrobialGenomics-IrsicaixaOrg/dar\") # install.packages(\"devtools\") devtools::install_github(\"MicrobialGenomics-IrsicaixaOrg/dar\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis by Consensus","text":"","code":"library(dar)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\") %>%   step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.03 * length(x))\") %>%   step_metagenomeseq() %>%   step_maaslin()  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Qottab  #>      ◉ step_filter_taxa() id = filter_taxa__Briouat  #>  #> DA steps: #>  #>      ◉ step_metagenomeseq() id = metagenomeseq__Kürtőskalács  #>      ◉ step_maaslin() id = maaslin__Bierock  ## Prep recipe da_results <- prep(rec, parallel = TRUE) #> Default value being used. da_results #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 278 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ metagenomeseq__Kürtőskalács diff_taxa = 237  #>      ✔ maaslin__Bierock diff_taxa = 205  #>  #>      ℹ 174 taxa are present in all tested methods  ## Consensus strategy n_methods <- 3 da_results <- bake(da_results, count_cutoff = n_methods)  # Results cool(da_results) #> ℹ Bake for count_cutoff = 3 #> # A tibble: 0 × 2 #> # … with 2 variables: taxa_id <chr>, taxa <chr> #> # ℹ Use `colnames()` to see all variable names"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Differential Abundance Analysis by Consensus","text":"think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Working first Pull Request? can learn free series Contribute Open Source Project GitHub","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Differential Abundance Analysis by Consensus","text":"Please note dar project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"Converts SummarizedExperiment Phyloseq object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"","code":"SummarizedExperiment2phyloseq(dataset, assay_idx = 1)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"dataset SummarizedExperiment assay_idx assay index","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"phyloseq","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a New Operation to the Current Recipe — add_step","title":"Add a New Operation to the Current Recipe — add_step","text":"add_step adds step last location recipe. add_check checks.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a New Operation to the Current Recipe — add_step","text":"","code":"add_step(rec, object)  # S4 method for recipe add_step(rec, object)  # S4 method for prep_recipe add_step(rec, object)  add_check(rec, object)  # S4 method for recipe add_check(rec, object)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a New Operation to the Current Recipe — add_step","text":"rec recipe(). object step check object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a New Operation to the Current Recipe — add_step","text":"updated recipe() new operation last slot.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract results from recipe step — bake","title":"Extract results from recipe step — bake","text":"prep recipe add step define result extraction method.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract results from recipe step — bake","text":"","code":"bake(   rec,   count_cutoff = NULL,   weights = NULL,   exclude = NULL,   id = rand_id(\"bake\") )  # S4 method for prep_recipe bake(   rec,   count_cutoff = NULL,   weights = NULL,   exclude = NULL,   id = rand_id(\"bake\") )  # S4 method for recipe bake(   rec,   count_cutoff = NULL,   weights = NULL,   exclude = NULL,   id = rand_id(\"bake\") )  bake_new(count_cutoff, weights, exclude, id)  run_bake(rec, count_cutoff, weights, exclude, id)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract results from recipe step — bake","text":"rec recipe object. step added sequence operations recipe. count_cutoff Indicates minimum number methods OTU must present (Default: NULL). count_cutoff NULL count_cutoff equal length(steps_ids(rec, \"da\")) - length(exclude) weights Named vector ponderation value method. exclude Method ids exclude. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract results from recipe step — bake","text":"object class prep_recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if recipe contains a rarefaction step — contains_rarefaction","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"Checks recipe contains rarefaction step","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"","code":"contains_rarefaction(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"rec recipe object. step added sequence operations recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract results from defined bake — cool","title":"Extract results from defined bake — cool","text":"Extract results defined bake","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract results from defined bake — cool","text":"","code":"cool(rec, bake = 1)  # S4 method for recipe cool(rec, bake = 1)  # S4 method for prep_recipe cool(rec, bake = 1)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract results from defined bake — cool","text":"rec recipe object. bake Name index bake extract.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract results from defined bake — cool","text":"tbl_df","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/dar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dar: Differential Abundance Analysis by Consensus — dar-package","title":"dar: Differential Abundance Analysis by Consensus — dar-package","text":"learn dar, start vignettes: browseVignettes(package = \"dar\")","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/dar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dar: Differential Abundance Analysis by Consensus — dar-package","text":"Maintainer: Francesc Catala-Moll fcatalamoll@gmail.com","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the number of shared DA OTUs between methods. — exclusion_plt","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"Plot number shared DA OTUs methods.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"","code":"exclusion_plt(rec, steps = steps_ids(rec, \"da\"))  # S4 method for recipe exclusion_plt(rec, steps = steps_ids(rec, \"da\"))  # S4 method for prep_recipe exclusion_plt(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"rec recipe object. steps Character vector step_ids take account.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"ggplot2","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Export step parameters as json. — export_steps","title":"Export step parameters as json. — export_steps","text":"Export step parameters json.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export step parameters as json. — export_steps","text":"","code":"export_steps(rec, file_name)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export step parameters as json. — export_steps","text":"rec recipe object. file_name path file name optout file.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds common OTU between method results — find_intersections","title":"Finds common OTU between method results — find_intersections","text":"Finds common OTU method results","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds common OTU between method results — find_intersections","text":"","code":"find_intersections(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds common OTU between method results — find_intersections","text":"rec recipe object. steps character vector step ids take account","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds common OTU between method results — find_intersections","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"Generate unique contrasts levels categorical variable.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"","code":"get_comparisons(var, phy, as_list = TRUE, n_cut = 1)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"var categorical variable phy phyloseq object as_list boolean indicating output must returned list. n_cut minimum observations level.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"tibble list","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"","code":"if (FALSE) { get_comparisons(\"RiskGroup2\", metaHIV_phy) }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns phyloseq from recipe-class object — get_phy","title":"Returns phyloseq from recipe-class object — get_phy","text":"Returns phyloseq recipe-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns phyloseq from recipe-class object — get_phy","text":"","code":"get_phy(rec)  # S4 method for recipe get_phy(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns phyloseq from recipe-class object — get_phy","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns phyloseq from recipe-class object — get_phy","text":"Phyloseq class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns tax_info from recipe-class object — get_tax","title":"Returns tax_info from recipe-class object — get_tax","text":"Returns tax_info recipe-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns tax_info from recipe-class object — get_tax","text":"","code":"get_tax(rec)  # S4 method for recipe get_tax(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns tax_info from recipe-class object — get_tax","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns tax_info from recipe-class object — get_tax","text":"Tibble containing tax_info.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns var_info from recipe-class object — get_var","title":"Returns var_info from recipe-class object — get_var","text":"Returns var_info recipe-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns var_info from recipe-class object — get_var","text":"","code":"get_var(rec)  # S4 method for recipe get_var(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns var_info from recipe-class object — get_var","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns var_info from recipe-class object — get_var","text":"Tibble containing var_info.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Import steps from json file — import_steps","title":"Import steps from json file — import_steps","text":"Import steps json file","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import steps from json file — import_steps","text":"","code":"import_steps(rec, file)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import steps from json file — import_steps","text":"rec recipe object. file Path input file","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns data.frame with OTU intersection between methods — intersection_df","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"Returns data.frame OTU intersection methods","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"","code":"intersection_df(rec, steps = steps_ids(rec, \"da\"))  # S4 method for recipe intersection_df(rec, steps = steps_ids(rec, \"da\"))  # S4 method for prep_recipe intersection_df(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"rec recipe object. steps character vector step_ids take account.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"data.frame class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results using UpSet plot — intersection_plt","title":"Plot results using UpSet plot — intersection_plt","text":"Plot results using UpSet plot","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results using UpSet plot — intersection_plt","text":"","code":"intersection_plt(   rec,   steps = steps_ids(rec, \"da\"),   ordered_by = c(\"freq\", \"degree\") )  # S4 method for recipe intersection_plt(rec, steps)  # S4 method for prep_recipe intersection_plt(   rec,   steps = steps_ids(rec, \"da\"),   ordered_by = c(\"freq\", \"degree\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results using UpSet plot — intersection_plt","text":"rec recipe object. steps Character vector step_ids take account. ordered_by intersections matrix ordered . Options include frequency (entered \"freq\"), degree, order.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results using UpSet plot — intersection_plt","text":"UpSet plot","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/metaHIV_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Phyloseq object from metaHIV project — metaHIV_phy","title":"Phyloseq object from metaHIV project — metaHIV_phy","text":"Phyloseq object containing abundance counts sample_data metaHIV project. Count reads annotated Metaphlan3.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/metaHIV_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phyloseq object from metaHIV project — metaHIV_phy","text":"","code":"metaHIV_phy"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/metaHIV_phy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phyloseq object from metaHIV project — metaHIV_phy","text":"phyloseq object 451 taxas, 30 samples, 3 sample variables 7 taxonomic ranks.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/metaHIV_phy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phyloseq object from metaHIV project — metaHIV_phy","text":"s3://fcatala-09142020-eu-west-1/cloud_test/SpeciesQuantification/Kraken2","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts otu_table from phyloseq inside a recipe — otu_table","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"Extracts otu_table phyloseq inside recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"","code":"otu_table(rec)  # S4 method for recipe otu_table(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"rec recipe recipe step.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pastry_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Pastery data for step id generation — pastry_df","title":"Pastery data for step id generation — pastry_df","text":"Tibble contain","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pastry_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pastery data for step id generation — pastry_df","text":"","code":"pastry_df"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pastry_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pastery data for step id generation — pastry_df","text":"tbl_df object 228 unique pasteries.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pastry_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pastery data for step id generation — pastry_df","text":"https://raw.githubusercontent.com/prasertcbs/basic-dataset/master/pastry.csv","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs all the steps defined in a recipe — prep","title":"Performs all the steps defined in a recipe — prep","text":"recipe least one preprocessing DA operation run steps convenient order.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs all the steps defined in a recipe — prep","text":"","code":"prep(rec, parallel = TRUE, workers = 8, force = FALSE)  # S4 method for recipe prep(rec, parallel = TRUE, workers = 8, force = FALSE)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs all the steps defined in a recipe — prep","text":"rec recipe object. parallel FALSE, palatalization. TRUE, parallel execution using future furrr packages. workers Number workers palatalization. force Force reexecution steps. remove previous results.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs all the steps defined in a recipe — prep","text":"prep_recipe object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe-class.html","id":null,"dir":"Reference","previous_headings":"","what":"prep_recipe-class object — prep_recipe-class","title":"prep_recipe-class object — prep_recipe-class","text":"prep_recipe recipe results corresponding steps defined recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"prep_recipe-class object — prep_recipe-class","text":"results Contains results defined analysis recipe. bakes Contains executed bakes.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe prep_recipe. — prep_recipe","title":"Create a recipe prep_recipe. — prep_recipe","text":"prep_recipe recipe results corresponding steps defined recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe prep_recipe. — prep_recipe","text":"","code":"prep_recipe(rec, results, bakes)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe prep_recipe. — prep_recipe","text":"rec recipe object. results list results bakes list saved bakes","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe prep_recipe. — prep_recipe","text":"object class prep_recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a random identification field for steps — rand_id","title":"Make a random identification field for steps — rand_id","text":"Make random identification field steps","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a random identification field for steps — rand_id","text":"","code":"rand_id(prefix = \"step\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a random identification field for steps — rand_id","text":"prefix single character string","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a random identification field for steps — rand_id","text":"character string prefix random letters separated underscore. character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a random identification field for steps — rand_id","text":"","code":"rand_id(\"step\") #> [1] \"step__Quesito\""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads Phyloseq data — read_data","title":"Loads Phyloseq data — read_data","text":"function returns validated Phyloseq object loading directly file .rds extension. Alternatively, function can also take three text files input used construct validate Phyloseq object: Counts matrix otu_id first column. Taxonomic annotation matrix otu_id first column. Metadata annotation sample_id first column.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads Phyloseq data — read_data","text":"","code":"read_data(data_path)  validate_otu(otu)  validate_sample_data(sample_data)  validate_tax_table(tax_table)  validate_phyloseq(phy, slots = c(\"sample_data\", \"tax_table\"))  read_phyloseq(file_path)  read_file(file_path, ext = c(\".txt|.csv|.tsv\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads Phyloseq data — read_data","text":"data_path List length 1 3, paths input files.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads Phyloseq data — read_data","text":"phylseq-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads Phyloseq data — read_data","text":"","code":"# From a phyloseq object saved with .rds extension. system.file(\"extdata\", \"metaHIV_phy.rds\", package = \"dar\") %>%   read_data() #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]  # From the three components of a phyloseq object saved as a plain text. data_path <- c(   system.file(\"extdata\", \"metaHIV_counts.txt\", package = \"dar\"),   system.file(\"extdata\", \"metaHIV_metadata.txt\", package = \"dar\"),   system.file(\"extdata\", \"metaHIV_taxas.txt\", package = \"dar\") )  read_data(data_path) #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe-class.html","id":null,"dir":"Reference","previous_headings":"","what":"recipe-class object — phyloseq_or_null-class","title":"recipe-class object — phyloseq_or_null-class","text":"recipe description steps applied data set order prepare data analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"recipe-class object — phyloseq_or_null-class","text":"phyloseq Phyloseq-class object var_info tibble contains current set terms data set. initially defaults data contained var_info. tax_info tibble contains current set taxonomic levels used analysis. steps List step-class objects used DA.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing data — recipe","title":"Create a recipe for preprocessing data — recipe","text":"recipe description steps applied data set order prepare data analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing data — recipe","text":"","code":"recipe(phyloseq = NULL, var_info = NULL, tax_info = NULL, steps = list())"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing data — recipe","text":"phyloseq Phyloseq-class object. var_info character string column names corresponding variables used context. tax_info character string taxonomic levels used context. steps list steps.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing data — recipe","text":"object class recipe sub-objects: phyloseq object class phyloseq taxa abundance information. var_info tibble contains current set terms data set. initially defaults data contained var_info. tax_info tibble contains current set taxonomic levels used analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Update packages — recipes_pkg_check","title":"Update packages — recipes_pkg_check","text":"check see required packages installed.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update packages — recipes_pkg_check","text":"","code":"recipes_pkg_check(pkg = NULL, step_name, ...)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update packages — recipes_pkg_check","text":"pkg character string package checked step_name Name step. ... Extra arguments pass utils::install.packages()","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update packages — recipes_pkg_check","text":"Nothing returned message printed console packages () installed along code .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update packages — recipes_pkg_check","text":"","code":"if (FALSE) { recipes_pkg_check(\"recipes\") }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns required pakcages for recipe object — required_deps","title":"Returns required pakcages for recipe object — required_deps","text":"Returns required pakcages recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns required pakcages for recipe object — required_deps","text":"","code":"required_deps(rec)  # S4 method for recipe required_deps(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns required pakcages for recipe object — required_deps","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_pkgs_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for tracking which additional packages are needed for steps. — required_pkgs_recipe","title":"Methods for tracking which additional packages are needed for steps. — required_pkgs_recipe","text":"Methods tracking additional packages needed steps.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_pkgs_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for tracking which additional packages are needed for steps. — required_pkgs_recipe","text":"","code":"required_pkgs_recipe(rec)  # S4 method for recipe required_pkgs_recipe(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_pkgs_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for tracking which additional packages are needed for steps. — required_pkgs_recipe","text":"rec recipe recipe step.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_pkgs_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for tracking which additional packages are needed for steps. — required_pkgs_recipe","text":"character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts sample_data from phyloseq inside a recipe — sample_data","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"Extracts sample_data phyloseq inside recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"","code":"sample_data(rec)  # S4 method for recipe sample_data(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"rec recipe recipe step.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":null,"dir":"Reference","previous_headings":"","what":"step sets the class of the step and check is for checks. — step","title":"step sets the class of the step and check is for checks. — step","text":"step sets class step check checks.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"step sets the class of the step and check is for checks. — step","text":"","code":"step(subclass, ..., .prefix = \"step_\")  check(subclass, ..., .prefix = \"check_\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"step sets the class of the step and check is for checks. — step","text":"subclass character string resulting class. example, subclass = \"blah\" step object returned class step_blah check_blah depending context. ... arguments operator returned. .prefix Prefix subclass created.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"step sets the class of the step and check is for checks. — step","text":"updated step check new class.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":null,"dir":"Reference","previous_headings":"","what":"ALDEx2 analysis — step_aldex","title":"ALDEx2 analysis — step_aldex","text":"differential abundance analysis comparison two conditions. example, single-organism meta-RNA-seq high-throughput sequencing assays, selected unselected values -vitro sequence selections. Uses Dirichlet-multinomial model infer abundance counts, optimized three experimental replicates. Infers sampling variation calculates expected false discovery rate given biological sampling variation using Wilcox rank test Welches t-test (aldex.ttest) glm Kruskal Wallis tests (aldex.glm). Reports P fdr values calculated Benjamini Hochberg correction (supported dar package).","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ALDEx2 analysis — step_aldex","text":"","code":"step_aldex(   rec,   max_significance = 0.05,   mc.samples = 128,   denom = \"all\",   rarefy = FALSE,   id = rand_id(\"aldex\") )  # S4 method for recipe step_aldex(   rec,   max_significance = 0.05,   mc.samples = 128,   denom = \"all\",   rarefy = FALSE,   id = rand_id(\"aldex\") )  # S4 method for prep_recipe step_aldex(   rec,   max_significance = 0.05,   mc.samples = 128,   denom = \"all\",   rarefy = FALSE,   id = rand_id(\"aldex\") )  step_aldex_new(out_cut, max_significance, mc.samples, denom, rarefy, id)  run_aldex(rec, max_significance, mc.samples, denom, rarefy)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ALDEx2 analysis — step_aldex","text":"rec recipe object. step added sequence operations recipe. max_significance Benjamini-Hochberg corrected P value Welch’s t test cutoff. mc.samples number Monte Carlo instances use estimate underlying distributions; since estimating central tendencies, 128 usually sufficient, larger numbers may . denom variable (, iqlr, zero, lvha, median, user) indicating features use denominator Geometric Mean calculation default \"\" uses geometric mean abundance features. Using \"median\" returns median abundance features. Using \"iqlr\" uses features first third quartile variance clr values across samples. Using \"zero\" uses non-zero features grop denominator. approach extreme case many nonzero features one condition many zeros another. Using \"lvha\" uses features low variance (bottom quartile) high relative abundance (top quartile every sample). also possible supply vector row indices use denominator. , experimentalist determining -priori rows thought invariant. case RNA-seq, include ribosomal protein genes house-keeping genes. used caution offsets may different original data data used function features 0 samples removed aldex.clr. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ALDEx2 analysis — step_aldex","text":"object class recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ALDEx2 analysis — step_aldex","text":"run_aldex function wrapper performs log-ratio transformation statistical testing single line code. Specifically, function: () generates Monte Carlo samples Dirichlet distribution sample, (b) converts instance using log-ratio transform, (c) returns test results two sample (Welch's t, Wilcoxon) test. function also estimates effect size two sample analyses.","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":null,"dir":"Reference","previous_headings":"","what":"ANCOM analysis — step_ancom","title":"ANCOM analysis — step_ancom","text":"function performs analysis composition microbiomes (ANCOM). ANCOM accounts underlying structure data can used comparing composition microbiomes two populations. ANCOM makes distributional assumptions can implemented linear model framework adjust covariates well model longitudinal data.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANCOM analysis — step_ancom","text":"","code":"step_ancom(   rec,   out_cut = 0.05,   zero_cut = 0.9,   lib_cut = 0,   neg_lb = FALSE,   p_adj_method = \"BH\",   alpha = 0.05,   rarefy = FALSE,   id = rand_id(\"ancom\") )  # S4 method for recipe step_ancom(   rec,   out_cut = 0.05,   zero_cut = 0.9,   lib_cut = 0,   neg_lb = FALSE,   p_adj_method = \"BH\",   alpha = 0.05,   rarefy = FALSE,   id = rand_id(\"ancom\") )  step_ancom_new(   out_cut,   zero_cut,   lib_cut,   neg_lb,   p_adj_method,   alpha,   rarefy,   id )  run_ancom(rec, out_cut, zero_cut, lib_cut, neg_lb, p_adj_method, alpha, rarefy)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANCOM analysis — step_ancom","text":"rec recipe object. step added sequence operations recipe. out_cut Numerical fraction 0 1. taxon, observations proportion mixture distribution less out_cut detected outlier zeros; observations proportion mixture distribution greater 1 - out_cut detected outlier values. zero_cut Numerical fraction 0 1. Taxa proportion zeroes greater zero_cut included analysis. lib_cut Numeric. Samples library size less lib_cut included analysis. neg_lb Logical. TRUE indicates taxon classified structural zero corresponding experimental group using asymptotic lower bound. specifically, neg_lb = TRUE indicates using criteria stated section 3.2 ANCOM-II detect structural zeros; Otherwise, neg_lb = FALSE use equation 1 section 3.2 ANCOM-II declaring structural zeros. p_adj_method Character. Specifying method adjust p-values multiple comparisons. Default “BH” (Benjamini-Hochberg procedure). alpha Level significance. Default 0.05. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANCOM analysis — step_ancom","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":null,"dir":"Reference","previous_headings":"","what":"corncob analysis — step_corncob","title":"corncob analysis — step_corncob","text":"Corncob individual taxon regression model uses abundance tables sample data. corncob able model differential abundance differential variability, addresses challenges presented .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"corncob analysis — step_corncob","text":"","code":"step_corncob(   rec,   phi.formula = stats::formula(~1),   formula_null = stats::formula(~1),   phi.formula_null = stats::formula(~1),   link = \"logit\",   phi.link = \"logit\",   test = \"Wald\",   boot = FALSE,   B = 1000,   filter_discriminant = TRUE,   fdr_cutoff = 0.05,   fdr = \"fdr\",   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"corncob\") )  # S4 method for recipe step_corncob(   rec,   phi.formula = stats::formula(~1),   formula_null = stats::formula(~1),   phi.formula_null = stats::formula(~1),   link = \"logit\",   phi.link = \"logit\",   test = \"Wald\",   boot = FALSE,   B = 1000,   filter_discriminant = TRUE,   fdr_cutoff = 0.05,   fdr = \"fdr\",   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"corncob\") )  # S4 method for prep_recipe step_corncob(   rec,   phi.formula = stats::formula(~1),   formula_null = stats::formula(~1),   phi.formula_null = stats::formula(~1),   link = \"logit\",   phi.link = \"logit\",   test = \"Wald\",   boot = FALSE,   B = 1000,   filter_discriminant = TRUE,   fdr_cutoff = 0.05,   fdr = \"fdr\",   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"corncob\") )  step_corncob_new(   phi.formula,   formula_null,   phi.formula_null,   link,   phi.link,   test,   boot,   B,   filter_discriminant,   fdr_cutoff,   fdr,   log2FC,   rarefy,   id )  run_corncob(   rec,   phi.formula,   formula_null,   phi.formula_null,   link,   phi.link,   test,   boot,   B,   filter_discriminant,   fdr_cutoff,   fdr,   log2FC,   rarefy )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"corncob analysis — step_corncob","text":"rec recipe object. step added sequence operations recipe. phi.formula object class formula without response: symbolic description model fitted dispersion. formula_null Formula mean null, without response. phi.formula_null Formula overdispersion null, without response. link Link function abundance covariates, defaults \"logit\". phi.link Link function dispersion covariates, defaults \"logit\". test Character. Hypothesis testing procedure use. One \"Wald\" \"LRT\" (likelihood ratio test). boot Boolean. Defaults FALSE. Indicator whether use parametric bootstrap algorithm. (See pbWald pbLRT). B Optional integer. Number bootstrap iterations. Ignored boot FALSE. Otherwise, defaults 1000. filter_discriminant Boolean. Defaults TRUE. FALSE, discriminant taxa filtered . fdr_cutoff Integer. Defaults 0.05. Desired type 1 error rate. fdr Character. Defaults \"fdr\". False discovery rate control method, see p.adjust options. log2FC log2FC cutoff. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"corncob analysis — step_corncob","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":null,"dir":"Reference","previous_headings":"","what":"DESeq2 analysis — step_deseq","title":"DESeq2 analysis — step_deseq","text":"Differential expression analysis based Negative Binomial (.k.. Gamma-Poisson) distribution. function performs default analysis steps: 1) estimation size factors: estimateSizeFactors. 2) estimation dispersion: estimateDispersions. 3) Negative Binomial GLM fitting Wald statistics: nbinomWaldTest. complete details step, see manual pages respective functions. DESeq function returns DESeqDataSet object, results tables (log2 fold changes p-values) can generated using results function. Shrunken LFC can generated using lfcShrink function.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DESeq2 analysis — step_deseq","text":"","code":"step_deseq(   rec,   test = \"Wald\",   fitType = \"parametric\",   betaPrior = FALSE,   type = \"ashr\",   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"deseq\") )  # S4 method for recipe step_deseq(   rec,   test = \"Wald\",   fitType = \"parametric\",   betaPrior = FALSE,   type = \"ashr\",   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"deseq\") )  # S4 method for prep_recipe step_deseq(   rec,   test = \"Wald\",   fitType = \"parametric\",   betaPrior = FALSE,   type = \"ashr\",   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"deseq\") )  step_deseq_new(   rec,   test,   fitType,   betaPrior,   type,   max_significance,   log2FC,   rarefy,   id )  run_deseq(   rec,   test,   fitType,   betaPrior,   type,   max_significance,   log2FC,   rarefy )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DESeq2 analysis — step_deseq","text":"rec recipe object. step added sequence operations recipe. test Either \"Wald\" \"LRT\", use either Wald significance tests (defined nbinomWaldTest), likelihood ratio test difference deviance full reduced model formula (defined nbinomLRT). fitType either \"parametric\", \"local\", \"mean\", \"glmGamPoi\" type fitting dispersions mean intensity. See estimateDispersions description. betaPrior whether put zero-mean normal prior non-intercept coefficients See nbinomWaldTest description calculation beta prior. versions >=1.16, default set FALSE, shrunken LFCs obtained afterwards using lfcShrink. type \"apeglm\" adaptive Student's t prior shrinkage estimator 'apeglm' package; \"ashr\" adaptive shrinkage estimator 'ashr' package, using fitted mixture normals prior - see Stephens (2016) reference citation; \"normal\" 2014 DESeq2 shrinkage estimator using Normal prior. max_significance q-value threshold significance. log2FC log2FC cutoff. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DESeq2 analysis — step_deseq","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"function directly analogous genefilter function microarray filtering, used filtering OTUs phyloseq objects. applies arbitrary set functions — function list, instance, created filterfun — across-sample criteria, one OTU time. takes input phyloseq object, returns logical vector indicating whether OTU passed criteria. Alternatively, \"prune\" option set FALSE, returns already-trimmed version phyloseq object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"","code":"step_filter_taxa(rec, .f, id = rand_id(\"filter_taxa\"))  # S4 method for recipe step_filter_taxa(rec, .f, id = rand_id(\"filter_taxa\"))  step_filter_taxa_new(.f, id)  run_filter_taxa(rec, .f)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"rec recipe object. step added sequence operations recipe. .f function list functions take vector abundance values return logical. canned useful function types included genefilter-package. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":null,"dir":"Reference","previous_headings":"","what":"lefse analysis — step_lefse","title":"lefse analysis — step_lefse","text":"Lefser metagenomic biomarker discovery tool based LEfSe tool published Huttenhower et al. 2011. Lefser R implementation LEfSe method. Using statistical analyses, lefser compares microbial populations healthy diseased subjects discover differencially expressed microorganisms. Lefser computes effect size, estimates magnitude differential expression populations differentially expressed microorganism. Subclasses classes can also assigned used within analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lefse analysis — step_lefse","text":"","code":"step_lefse(   rec,   kruskal.threshold = 0.05,   wilcox.threshold = 0.05,   lda.threshold = 2,   blockCol = NULL,   assay = 1L,   trim.names = FALSE,   rarefy = TRUE,   id = rand_id(\"lefse\") )  # S4 method for recipe step_lefse(   rec,   kruskal.threshold = 0.05,   wilcox.threshold = 0.05,   lda.threshold = 2,   blockCol = NULL,   assay = 1L,   trim.names = FALSE,   rarefy = TRUE,   id = rand_id(\"lefse\") )  # S4 method for prep_recipe step_lefse(   rec,   kruskal.threshold = 0.05,   wilcox.threshold = 0.05,   lda.threshold = 2,   blockCol = NULL,   assay = 1L,   trim.names = FALSE,   rarefy = TRUE,   id = rand_id(\"lefse\") )  step_lefse_new(   kruskal.threshold,   wilcox.threshold,   lda.threshold,   blockCol,   assay,   trim.names,   rarefy,   id )  run_lefse(   rec,   kruskal.threshold = kruskal.threshold,   wilcox.threshold = wilcox.threshold,   lda.threshold = lda.threshold,   blockCol = blockCol,   assay = assay,   trim.names = trim.names,   rarefy = rarefy )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lefse analysis — step_lefse","text":"rec recipe object. step added sequence operations recipe. kruskal.threshold numeric(1) p-value Kruskal-Wallis Rank Sum Test (default 0.05). wilcox.threshold numeric(1) p-value Wilcoxon Rank-Sum Test 'blockCol' present (default 0.05). lda.threshold numeric(1) effect size threshold (default 2.0). blockCol character(1) Optional column name 'colData(expr)' indicating blocks, usually factor two levels (e.g., 'c(\"adult\", \"senior\")'; default NULL). assay -th assay matrix ‘SummarizedExperiment' (’expr'; default 1). trim.names 'TRUE' extracts specific taxonomic rank organism. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lefse analysis — step_lefse","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":null,"dir":"Reference","previous_headings":"","what":"MaAsLin2 analysis — step_maaslin","title":"MaAsLin2 analysis — step_maaslin","text":"MaAsLin2 finds associations microbiome meta-omics features complex metadata population-scale epidemiological studies. software includes multiple analysis methods (including support multiple covariates repeated measures), filtering, normalization, transform options customize analysis specific study.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MaAsLin2 analysis — step_maaslin","text":"","code":"step_maaslin(   rec,   min_abundance = 0,   min_prevalence = 0.1,   min_variance = 0,   normalization = \"TSS\",   transform = \"LOG\",   analysis_method = \"LM\",   max_significance = 0.25,   random_effects = NULL,   correction = \"BH\",   standardize = TRUE,   reference = NULL,   rarefy = FALSE,   id = rand_id(\"maaslin\") )  # S4 method for recipe step_maaslin(   rec,   min_abundance = 0,   min_prevalence = 0.1,   min_variance = 0,   normalization = \"TSS\",   transform = \"LOG\",   analysis_method = \"LM\",   max_significance = 0.25,   random_effects = NULL,   correction = \"BH\",   standardize = TRUE,   reference = NULL,   rarefy = FALSE,   id = rand_id(\"maaslin\") )  # S4 method for prep_recipe step_maaslin(   rec,   min_abundance = 0,   min_prevalence = 0.1,   min_variance = 0,   normalization = \"TSS\",   transform = \"LOG\",   analysis_method = \"LM\",   max_significance = 0.25,   random_effects = NULL,   correction = \"BH\",   standardize = TRUE,   reference = NULL,   rarefy = FALSE,   id = rand_id(\"maaslin\") )  step_maaslin_new(   rec,   min_abundance,   min_prevalence,   min_variance,   normalization,   transform,   analysis_method,   max_significance,   random_effects,   correction,   standardize,   reference,   rarefy,   id )  run_maaslin(   rec,   min_abundance,   min_prevalence,   min_variance,   normalization,   transform,   analysis_method,   max_significance,   random_effects,   correction,   standardize,   reference,   rarefy )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MaAsLin2 analysis — step_maaslin","text":"rec recipe object. step added sequence operations recipe. min_abundance minimum abundance feature. min_prevalence minimum percent samples feature detected minimum abundance. min_variance Keep features variance greater . normalization normalization method apply. transform transform apply. analysis_method transform apply. max_significance q-value threshold significance. random_effects random effects model, comma-delimited multiple effects. correction correction method computing q-value. standardize Apply z-score continuous metadata scale. reference factor use reference variable two levels provided string 'variable,reference' semi-colon delimited multiple variables. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MaAsLin2 analysis — step_maaslin","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"MetagenomeSeq analysis — step_metagenomeseq","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"metagenomeSeq designed determine features (Operational Taxanomic Unit (OTU), species, etc.) differentially abundant two groups multiple samples. metagenomeSeq designed address effects normalization -sampling microbial communities disease association detection testing feature correlations.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"","code":"step_metagenomeseq(   rec,   zeroMod = NULL,   useCSSoffset = TRUE,   useMixedModel = FALSE,   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"metagenomeseq\") )  # S4 method for recipe step_metagenomeseq(   rec,   zeroMod = NULL,   useCSSoffset = TRUE,   useMixedModel = FALSE,   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"metagenomeseq\") )  # S4 method for prep_recipe step_metagenomeseq(   rec,   zeroMod = NULL,   useCSSoffset = TRUE,   useMixedModel = FALSE,   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"metagenomeseq\") )  step_metagenomeseq_new(   rec,   zeroMod,   useCSSoffset,   useMixedModel,   max_significance,   log2FC,   rarefy,   id )  run_metagenomeseq(   rec,   zeroMod,   useCSSoffset,   useMixedModel,   max_significance,   log2FC,   rarefy )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"rec recipe object. step added sequence operations recipe. zeroMod zero model, model account change number OTUs observed linear effect depth coverage. useCSSoffset Boolean, whether include default scaling parameters model . useMixedModel Estimate correlation duplicate features replicates using duplicateCorrelation. max_significance q-value threshold significance. log2FC log2FC cutoff. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"Please note authors phyloseq advocate using normalization procedure, despite recent popularity. justifications using alternative approaches address disparities library sizes made available article PLoS Computational Biology. See phyloseq_to_deseq2 recommended alternative rarefying directly supported phyloseq package, well supplemental materials PLoS-CB article phyloseq extensions repository GitHub. Nevertheless, comparison demonstration, rarefying procedure implemented good faith options hope useful. function uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. kind resampling can performed without replacement, replacement computationally-efficient, default setting. See replace parameter documentation details. recommended explicitly select random number generator seed invoking function, , alternatively, explicitly provide single positive integer argument rngseed.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"","code":"step_rarefaction(rec, id = rand_id(\"rarefaction\"))  # S4 method for recipe step_rarefaction(rec, id = rand_id(\"rarefaction\"))  # S4 method for prep_recipe step_rarefaction(rec, id = rand_id(\"rarefaction\"))  step_rarefaction_new(id)  run_rarefaction(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"rec recipe object. step added sequence operations recipe. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"object class recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset species by taxonomic expression — step_subset_taxa","title":"Subset species by taxonomic expression — step_subset_taxa","text":"convenience wrapper around subset function. intended speed subsetting complex experimental objects one function call. case subset_taxa, subsetting based expression related columns values within tax_table (taxonomyTable component) slot physeq. OTUs retained dataset equivalent x[subset & !.na(subset)], x vector OTU IDs subset logical results subsetting expression. important keep mind, users often unaware subsetting step also removes/omits OTUs missing value result, NA, somewhere expression.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset species by taxonomic expression — step_subset_taxa","text":"","code":"step_subset_taxa(rec, expr, id = rand_id(\"subset_taxa\"))  # S4 method for recipe step_subset_taxa(rec, expr, id = rand_id(\"subset_taxa\"))  step_subset_taxa_new(expr, id)  run_subset_taxa(rec, expr)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset species by taxonomic expression — step_subset_taxa","text":"rec recipe object. step added sequence operations recipe. expr subsetting expression applied taxonomyTable. passed subset, details examples functions can found documentation. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset species by taxonomic expression — step_subset_taxa","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts parameters from steps and makes a character vector with the expression to\nevaluate — step_to_expr","title":"Extracts parameters from steps and makes a character vector with the expression to\nevaluate — step_to_expr","text":"Extracts parameters steps makes character vector expression evaluate","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts parameters from steps and makes a character vector with the expression to\nevaluate — step_to_expr","text":"","code":"step_to_expr(step)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts parameters from steps and makes a character vector with the expression to\nevaluate — step_to_expr","text":"step object class step","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts parameters from steps and makes a character vector with the expression to\nevaluate — step_to_expr","text":"character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcox analysis — step_wilcox","title":"Wilcox analysis — step_wilcox","text":"Performs wilcox test determine features (Operational Taxanomic Unit (OTU), species, etc.) differentially abundant two groups multiple samples.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcox analysis — step_wilcox","text":"","code":"step_wilcox(   rec,   norm_method = \"compositional\",   max_significance = 0.05,   p_adj_method = \"BH\",   rarefy = TRUE,   id = rand_id(\"wilcox\") )  # S4 method for recipe step_wilcox(   rec,   norm_method = \"compositional\",   max_significance = 0.05,   p_adj_method = \"BH\",   rarefy = TRUE,   id = rand_id(\"wilcox\") )  # S4 method for prep_recipe step_wilcox(   rec,   norm_method = \"compositional\",   max_significance = 0.05,   p_adj_method = \"BH\",   rarefy = TRUE,   id = rand_id(\"wilcox\") )  step_wilcox_new(rec, norm_method, max_significance, p_adj_method, rarefy, id)  run_wilcox(rec, norm_method, max_significance, p_adj_method, rarefy)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcox analysis — step_wilcox","text":"rec recipe object. step added sequence operations recipe. norm_method Transformation apply. options include: 'compositional' (ie relative abundance), 'Z', 'log10', 'log10p', 'hellinger', 'identity', 'clr', 'alr', method vegan::decostand function. max_significance q-value threshold significance. p_adj_method Character. Specifying method adjust p-values multiple comparisons. Default “BH” (Benjamini-Hochberg procedure). rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcox analysis — step_wilcox","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get step_ids from recipe — steps_ids","title":"Get step_ids from recipe — steps_ids","text":"Get step_ids recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get step_ids from recipe — steps_ids","text":"","code":"steps_ids(rec, type = \"all\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get step_ids from recipe — steps_ids","text":"rec recipe object. type character vector indicating type class. Options c(\"\", \"da\", \"prepro\").","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get step_ids from recipe — steps_ids","text":"character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts tax_table from phyloseq inside a recipe — tax_table","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"Extracts tax_table phyloseq inside recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"","code":"tax_table(rec)  # S4 method for recipe tax_table(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"rec recipe recipe step.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to convert phyloseq slots to tibble — to_tibble","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"Wrapper convert phyloseq slots tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"","code":"to_tibble(df, id_name = \"otu_id\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"df output otu_table(), sample_data() tax_table() phyloseq functions. id_name Name new column generated rownames","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"","code":"if (FALSE) { to_tibble(phyloseq::otu_table(metaHIV_phy)) }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/news/index.html","id":"dar-0009000","dir":"Changelog","previous_headings":"","what":"dar 0.0.0.9000","title":"dar 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
