[{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement fcatala@iriscaixa.es. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dar","title":"Contributing to dar","text":"outlines propose change dar. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to dar","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to dar","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to dar","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"MicrobialGenomics-IrsicaixaOrg/dar\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to dar","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dar","text":"Please note dar project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Francesc Català-Moll Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"an-example","dir":"Articles","previous_headings":"","what":"An Example","title":"Introduction to dar","text":"package contains data set Noguera-Julian, M., et al. 2016 used find differential abundant microbial species among men sex men (MSM) non-MSM (hts). data stored inside object class phyloseq, standard input format creating recipes dar. first load data inspect :","code":"library(dar)  data(\"metaHIV_phy\", package = \"dar\")  metaHIV_phy #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"an-initial-recipe","dir":"Articles","previous_headings":"","what":"An Initial Recipe","title":"Introduction to dar","text":"First, create recipe object original data specify processing differential analysis steps. Recipes can created manually sequentially adding roles variables data set. easiest way create initial recipe : var_info argument corresponds variable considered modeling process tax_info indicates taxonomic level used analyses.","code":"rec_obj <- recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  rec_obj #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"preprocessing-steps","dir":"Articles","previous_headings":"","what":"Preprocessing Steps","title":"Introduction to dar","text":", preprocessing steps step X can added sequentially one two ways: Note step_ancom functions always return updated recipes. two types steps, charge processing (prepro) destined define methods differential analysis (da). prepro steps used modify data loaded recipe used da steps. ‘dar’ package include 3 main preprocessing functionalities. step_subset_taxa: used subsetting columns values within tax_table. step_filter_taxa: used filtering OTUs recipe objects. step_rarefaction: used resample OTU table samples library size. data, can add operation preprocessing data stored initial recpie. First, use step_subset_taxa retain Bacteria Archaea OTUs Kingdom taxonomic level. filter OTUs least 3% samples counts greater 0.","code":"rec_obj <- step_{X}(rec_obj, arguments)    ## or rec_obj <- rec_obj %>% step_{X}(arguments) rec_obj <- rec_obj %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%    step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.3 * length(x))\")    rec_obj #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Pretzel  #>      ◉ step_filter_taxa() id = filter_taxa__Macaron  #>  #> DA steps:"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"differential-analysis","dir":"Articles","previous_headings":"","what":"Differential Analysis","title":"Introduction to dar","text":"Now defined preprocessing input data da methods used, need define . introduction use metagenomeSeq, maaslin2 DESeq2 methods default parameters (defined authors method). ‘dar’ package includes da steps defined . full list:","code":"rec_obj <- rec_obj %>%    step_deseq() %>%    step_metagenomeseq(rm_zeros = 0.01) %>%    step_maaslin()  rec_obj #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Pretzel  #>      ◉ step_filter_taxa() id = filter_taxa__Macaron  #>  #> DA steps: #>  #>      ◉ step_deseq() id = deseq__Tu  #>      ◉ step_metagenomeseq() id = metagenomeseq__Bridie  #>      ◉ step_maaslin() id = maaslin__Kroštule grep(\"^step_\", ls(\"package:dar\"), value = TRUE) %>%    grep(\"_new|_to_expr|filter|subset|rarefaction\", ., value = TRUE, invert = TRUE) #> [1] \"step_aldex\"         \"step_ancom\"         \"step_corncob\"       #> [4] \"step_deseq\"         \"step_lefse\"         \"step_maaslin\"       #> [7] \"step_metagenomeseq\" \"step_wilcox\""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"prep","dir":"Articles","previous_headings":"","what":"Prep","title":"Introduction to dar","text":"ensure reproducibility consistency generated results, steps defined recipe executed time using prep function. Note resulting object print shows information amount differentially abundant OTUs methods, well number OTUs detected methods (consensus).","code":"da_results <- prep(rec_obj, parallel = TRUE) da_results #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 101 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ deseq__Tu diff_taxa = 53  #>      ✔ metagenomeseq__Bridie diff_taxa = 69  #>      ✔ maaslin__Kroštule diff_taxa = 86  #>  #>      ℹ 46 taxa are present in all tested methods"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"bake-and-cool","dir":"Articles","previous_headings":"","what":"Bake and cool","title":"Introduction to dar","text":"Now results need extract , however first need define consensus strategy bake. example interested OTUs detected differentially abundant three methods used. Finally can extract table results using cool function.","code":"## Number of used methods count <- steps_ids(da_results, type = \"da\") %>% length()  ## Define the bake  da_results <- bake(da_results, count_cutoff = count) cool(da_results) #> # A tibble: 46 × 2 #>    taxa_id taxa                         #>    <chr>   <chr>                        #>  1 Otu_34  Olsenella_scatoligenes       #>  2 Otu_35  Collinsella_aerofaciens      #>  3 Otu_37  Collinsella_stercoris        #>  4 Otu_45  Slackia_isoflavoniconvertens #>  5 Otu_47  Bacteroides_cellulosilyticus #>  6 Otu_51  Bacteroides_dorei            #>  7 Otu_52  Bacteroides_eggerthii        #>  8 Otu_62  Bacteroides_ovatus           #>  9 Otu_69  Bacteroides_sp_CAG_530       #> 10 Otu_78  Bacteroides_uniformis        #> # … with 36 more rows"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/dar.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to dar","text":"","code":"devtools::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.2.1 (2022-06-23) #>  os       Ubuntu 20.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2022-09-01 #>  pandoc   2.14.2 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package          * version  date (UTC) lib source #>  ade4               1.7-19   2022-04-19 [1] CRAN (R 4.2.1) #>  ape                5.6-2    2022-03-02 [1] CRAN (R 4.2.1) #>  assertthat         0.2.1    2019-03-21 [1] CRAN (R 4.2.1) #>  Biobase            2.56.0   2022-04-26 [1] Bioconductor #>  BiocGenerics       0.42.0   2022-04-26 [1] Bioconductor #>  biomformat         1.24.0   2022-04-26 [1] Bioconductor #>  Biostrings         2.64.1   2022-08-18 [1] Bioconductor #>  bitops             1.0-7    2021-04-24 [1] CRAN (R 4.2.1) #>  brio               1.1.3    2021-11-30 [1] CRAN (R 4.2.1) #>  bslib              0.4.0    2022-07-16 [1] CRAN (R 4.2.1) #>  cachem             1.0.6    2021-08-19 [1] CRAN (R 4.2.1) #>  callr              3.7.2    2022-08-22 [1] CRAN (R 4.2.1) #>  cli                3.3.0    2022-04-25 [1] CRAN (R 4.2.1) #>  cluster            2.1.3    2022-03-28 [2] CRAN (R 4.2.1) #>  codetools          0.2-18   2020-11-04 [2] CRAN (R 4.2.1) #>  colorspace         2.0-3    2022-02-21 [1] CRAN (R 4.2.1) #>  crayon             1.5.1    2022-03-26 [1] CRAN (R 4.2.1) #>  dar              * 0.99.0   2022-09-01 [1] local #>  data.table         1.14.2   2021-09-27 [1] CRAN (R 4.2.1) #>  dendextend         1.16.0   2022-07-04 [1] CRAN (R 4.2.1) #>  desc               1.4.1    2022-03-06 [1] CRAN (R 4.2.1) #>  devtools           2.4.4    2022-07-20 [1] CRAN (R 4.2.1) #>  digest             0.6.29   2021-12-01 [1] CRAN (R 4.2.1) #>  dplyr              1.0.10   2022-09-01 [1] CRAN (R 4.2.1) #>  ellipsis           0.3.2    2021-04-29 [1] CRAN (R 4.2.1) #>  evaluate           0.16     2022-08-09 [1] CRAN (R 4.2.1) #>  fansi              1.0.3    2022-03-24 [1] CRAN (R 4.2.1) #>  fastmap            1.1.0    2021-01-25 [1] CRAN (R 4.2.1) #>  foreach            1.5.2    2022-02-02 [1] CRAN (R 4.2.1) #>  fs                 1.5.2    2021-12-08 [1] CRAN (R 4.2.1) #>  furrr              0.3.1    2022-08-15 [1] CRAN (R 4.2.1) #>  future             1.27.0   2022-07-22 [1] CRAN (R 4.2.1) #>  generics           0.1.3    2022-07-05 [1] CRAN (R 4.2.1) #>  GenomeInfoDb       1.32.3   2022-08-09 [1] Bioconductor #>  GenomeInfoDbData   1.2.8    2022-08-18 [1] Bioconductor #>  ggplot2            3.3.6    2022-05-03 [1] CRAN (R 4.2.1) #>  globals            0.16.1   2022-08-28 [1] CRAN (R 4.2.1) #>  glue               1.6.2    2022-02-24 [1] CRAN (R 4.2.1) #>  gridExtra          2.3      2017-09-09 [1] CRAN (R 4.2.1) #>  gtable             0.3.1    2022-09-01 [1] CRAN (R 4.2.1) #>  heatmaply          1.3.0    2021-10-09 [1] CRAN (R 4.2.1) #>  htmltools          0.5.3    2022-07-18 [1] CRAN (R 4.2.1) #>  htmlwidgets        1.5.4    2021-09-08 [1] CRAN (R 4.2.1) #>  httpuv             1.6.5    2022-01-05 [1] CRAN (R 4.2.1) #>  httr               1.4.4    2022-08-17 [1] CRAN (R 4.2.1) #>  igraph             1.3.4    2022-07-19 [1] CRAN (R 4.2.1) #>  IRanges            2.30.1   2022-08-18 [1] Bioconductor #>  iterators          1.0.14   2022-02-05 [1] CRAN (R 4.2.1) #>  jquerylib          0.1.4    2021-04-26 [1] CRAN (R 4.2.1) #>  jsonlite           1.8.0    2022-02-22 [1] CRAN (R 4.2.1) #>  knitr              1.40     2022-08-24 [1] CRAN (R 4.2.1) #>  later              1.3.0    2021-08-18 [1] CRAN (R 4.2.1) #>  lattice            0.20-45  2021-09-22 [2] CRAN (R 4.2.1) #>  lazyeval           0.2.2    2019-03-15 [1] CRAN (R 4.2.1) #>  lifecycle          1.0.1    2021-09-24 [1] CRAN (R 4.2.1) #>  listenv            0.8.0    2019-12-05 [1] CRAN (R 4.2.1) #>  magrittr           2.0.3    2022-03-30 [1] CRAN (R 4.2.1) #>  MASS               7.3-57   2022-04-22 [2] CRAN (R 4.2.1) #>  Matrix             1.4-1    2022-03-23 [2] CRAN (R 4.2.1) #>  memoise            2.0.1    2021-11-26 [1] CRAN (R 4.2.1) #>  mgcv               1.8-40   2022-03-29 [2] CRAN (R 4.2.1) #>  mime               0.12     2021-09-28 [1] CRAN (R 4.2.1) #>  miniUI             0.1.1.1  2018-05-18 [1] CRAN (R 4.2.1) #>  multtest           2.52.0   2022-04-26 [1] Bioconductor #>  munsell            0.5.0    2018-06-12 [1] CRAN (R 4.2.1) #>  nlme               3.1-157  2022-03-25 [2] CRAN (R 4.2.1) #>  parallelly         1.32.1   2022-07-21 [1] CRAN (R 4.2.1) #>  permute            0.9-7    2022-01-27 [1] CRAN (R 4.2.1) #>  phyloseq           1.40.0   2022-04-26 [1] Bioconductor #>  pillar             1.8.1    2022-08-19 [1] CRAN (R 4.2.1) #>  pkgbuild           1.3.1    2021-12-20 [1] CRAN (R 4.2.1) #>  pkgconfig          2.0.3    2019-09-22 [1] CRAN (R 4.2.1) #>  pkgdown            2.0.6    2022-07-16 [1] CRAN (R 4.2.1) #>  pkgload            1.3.0    2022-06-27 [1] CRAN (R 4.2.1) #>  plotly             4.10.0   2021-10-09 [1] CRAN (R 4.2.1) #>  plyr               1.8.7    2022-03-24 [1] CRAN (R 4.2.1) #>  prettyunits        1.1.1    2020-01-24 [1] CRAN (R 4.2.1) #>  processx           3.7.0    2022-07-07 [1] CRAN (R 4.2.1) #>  profvis            0.3.7    2020-11-02 [1] CRAN (R 4.2.1) #>  promises           1.2.0.1  2021-02-11 [1] CRAN (R 4.2.1) #>  ps                 1.7.1    2022-06-18 [1] CRAN (R 4.2.1) #>  purrr              0.3.4    2020-04-17 [1] CRAN (R 4.2.1) #>  R6                 2.5.1    2021-08-19 [1] CRAN (R 4.2.1) #>  ragg               1.2.2    2022-02-21 [1] CRAN (R 4.2.1) #>  RColorBrewer       1.1-3    2022-04-03 [1] CRAN (R 4.2.1) #>  Rcpp               1.0.9    2022-07-08 [1] CRAN (R 4.2.1) #>  RCurl              1.98-1.8 2022-07-30 [1] CRAN (R 4.2.1) #>  registry           0.5-1    2019-03-05 [1] CRAN (R 4.2.1) #>  remotes            2.4.2    2021-11-30 [1] CRAN (R 4.2.1) #>  reshape2           1.4.4    2020-04-09 [1] CRAN (R 4.2.1) #>  rhdf5              2.40.0   2022-04-26 [1] Bioconductor #>  rhdf5filters       1.8.0    2022-04-26 [1] Bioconductor #>  Rhdf5lib           1.18.2   2022-05-15 [1] Bioconductor #>  rlang              1.0.5    2022-08-31 [1] CRAN (R 4.2.1) #>  rmarkdown          2.16     2022-08-24 [1] CRAN (R 4.2.1) #>  rprojroot          2.0.3    2022-04-02 [1] CRAN (R 4.2.1) #>  S4Vectors          0.34.0   2022-04-26 [1] Bioconductor #>  sass               0.4.2    2022-07-16 [1] CRAN (R 4.2.1) #>  scales             1.2.1    2022-08-20 [1] CRAN (R 4.2.1) #>  seriation          1.3.6    2022-07-16 [1] CRAN (R 4.2.1) #>  sessioninfo        1.2.2    2021-12-06 [1] any (@1.2.2) #>  shiny              1.7.2    2022-07-19 [1] CRAN (R 4.2.1) #>  stringi            1.7.8    2022-07-11 [1] CRAN (R 4.2.1) #>  stringr            1.4.1    2022-08-20 [1] CRAN (R 4.2.1) #>  survival           3.3-1    2022-03-03 [2] CRAN (R 4.2.1) #>  systemfonts        1.0.4    2022-02-11 [1] CRAN (R 4.2.1) #>  testthat           3.1.4    2022-04-26 [1] CRAN (R 4.2.1) #>  textshaping        0.3.6    2021-10-13 [1] CRAN (R 4.2.1) #>  tibble             3.1.8    2022-07-22 [1] CRAN (R 4.2.1) #>  tidyr              1.2.0    2022-02-01 [1] CRAN (R 4.2.1) #>  tidyselect         1.1.2    2022-02-21 [1] CRAN (R 4.2.1) #>  TSP                1.2-1    2022-07-14 [1] CRAN (R 4.2.1) #>  UpSetR             1.4.0    2019-05-22 [1] CRAN (R 4.2.1) #>  urlchecker         1.0.1    2021-11-30 [1] CRAN (R 4.2.1) #>  usethis            2.1.6    2022-05-25 [1] CRAN (R 4.2.1) #>  utf8               1.2.2    2021-07-24 [1] CRAN (R 4.2.1) #>  vctrs              0.4.1    2022-04-13 [1] CRAN (R 4.2.1) #>  vegan              2.6-2    2022-04-17 [1] CRAN (R 4.2.1) #>  viridis            0.6.2    2021-10-13 [1] CRAN (R 4.2.1) #>  viridisLite        0.4.1    2022-08-22 [1] CRAN (R 4.2.1) #>  webshot            0.5.3    2022-04-14 [1] CRAN (R 4.2.1) #>  xfun               0.32     2022-08-10 [1] CRAN (R 4.2.1) #>  xtable             1.8-4    2019-04-21 [1] CRAN (R 4.2.1) #>  XVector            0.36.0   2022-04-26 [1] Bioconductor #>  yaml               2.3.5    2022-02-21 [1] CRAN (R 4.2.1) #>  zlibbioc           1.42.0   2022-04-26 [1] Bioconductor #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.2.1/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/articles/data_import.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Data Import","text":"","code":"devtools::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.2.1 (2022-06-23) #>  os       Ubuntu 20.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2022-09-01 #>  pandoc   2.14.2 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  bslib         0.4.0   2022-07-16 [1] CRAN (R 4.2.1) #>  cachem        1.0.6   2021-08-19 [1] CRAN (R 4.2.1) #>  callr         3.7.2   2022-08-22 [1] CRAN (R 4.2.1) #>  cli           3.3.0   2022-04-25 [1] CRAN (R 4.2.1) #>  crayon        1.5.1   2022-03-26 [1] CRAN (R 4.2.1) #>  desc          1.4.1   2022-03-06 [1] CRAN (R 4.2.1) #>  devtools      2.4.4   2022-07-20 [1] CRAN (R 4.2.1) #>  digest        0.6.29  2021-12-01 [1] CRAN (R 4.2.1) #>  ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.2.1) #>  evaluate      0.16    2022-08-09 [1] CRAN (R 4.2.1) #>  fastmap       1.1.0   2021-01-25 [1] CRAN (R 4.2.1) #>  fs            1.5.2   2021-12-08 [1] CRAN (R 4.2.1) #>  glue          1.6.2   2022-02-24 [1] CRAN (R 4.2.1) #>  htmltools     0.5.3   2022-07-18 [1] CRAN (R 4.2.1) #>  htmlwidgets   1.5.4   2021-09-08 [1] CRAN (R 4.2.1) #>  httpuv        1.6.5   2022-01-05 [1] CRAN (R 4.2.1) #>  jquerylib     0.1.4   2021-04-26 [1] CRAN (R 4.2.1) #>  jsonlite      1.8.0   2022-02-22 [1] CRAN (R 4.2.1) #>  knitr         1.40    2022-08-24 [1] CRAN (R 4.2.1) #>  later         1.3.0   2021-08-18 [1] CRAN (R 4.2.1) #>  lifecycle     1.0.1   2021-09-24 [1] CRAN (R 4.2.1) #>  magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.2.1) #>  memoise       2.0.1   2021-11-26 [1] CRAN (R 4.2.1) #>  mime          0.12    2021-09-28 [1] CRAN (R 4.2.1) #>  miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.2.1) #>  pkgbuild      1.3.1   2021-12-20 [1] CRAN (R 4.2.1) #>  pkgdown       2.0.6   2022-07-16 [1] CRAN (R 4.2.1) #>  pkgload       1.3.0   2022-06-27 [1] CRAN (R 4.2.1) #>  prettyunits   1.1.1   2020-01-24 [1] CRAN (R 4.2.1) #>  processx      3.7.0   2022-07-07 [1] CRAN (R 4.2.1) #>  profvis       0.3.7   2020-11-02 [1] CRAN (R 4.2.1) #>  promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.2.1) #>  ps            1.7.1   2022-06-18 [1] CRAN (R 4.2.1) #>  purrr         0.3.4   2020-04-17 [1] CRAN (R 4.2.1) #>  R6            2.5.1   2021-08-19 [1] CRAN (R 4.2.1) #>  ragg          1.2.2   2022-02-21 [1] CRAN (R 4.2.1) #>  Rcpp          1.0.9   2022-07-08 [1] CRAN (R 4.2.1) #>  remotes       2.4.2   2021-11-30 [1] CRAN (R 4.2.1) #>  rlang         1.0.5   2022-08-31 [1] CRAN (R 4.2.1) #>  rmarkdown     2.16    2022-08-24 [1] CRAN (R 4.2.1) #>  rprojroot     2.0.3   2022-04-02 [1] CRAN (R 4.2.1) #>  sass          0.4.2   2022-07-16 [1] CRAN (R 4.2.1) #>  sessioninfo   1.2.2   2021-12-06 [1] any (@1.2.2) #>  shiny         1.7.2   2022-07-19 [1] CRAN (R 4.2.1) #>  stringi       1.7.8   2022-07-11 [1] CRAN (R 4.2.1) #>  stringr       1.4.1   2022-08-20 [1] CRAN (R 4.2.1) #>  systemfonts   1.0.4   2022-02-11 [1] CRAN (R 4.2.1) #>  textshaping   0.3.6   2021-10-13 [1] CRAN (R 4.2.1) #>  urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.2.1) #>  usethis       2.1.6   2022-05-25 [1] CRAN (R 4.2.1) #>  xfun          0.32    2022-08-10 [1] CRAN (R 4.2.1) #>  xtable        1.8-4   2019-04-21 [1] CRAN (R 4.2.1) #>  yaml          2.3.5   2022-02-21 [1] CRAN (R 4.2.1) #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.2.1/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesc Catala-Moll. Author, maintainer. Marc Noguera-Julian. Author.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Catala-Moll F, Noguera-Julian M (2022). dar: Differential Abundance Analysis Consensus. https://github.com/MicrobialGenomics-IrsicaixaOrg/dar, https://microbialgenomics-irsicaixaorg.github.io/dar/.","code":"@Manual{,   title = {dar: Differential Abundance Analysis by Consensus},   author = {Francesc Catala-Moll and Marc Noguera-Julian},   year = {2022},   note = {https://github.com/MicrobialGenomics-IrsicaixaOrg/dar, https://microbialgenomics-irsicaixaorg.github.io/dar/}, }"},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Differential Abundance Analysis by Consensus","text":"Differential abundance testing microbiome data challenges parametric non-parametric statistical methods, due sparsity, high variability compositional nature. Microbiome-specific statistical methods often assume classical distribution models take account compositional specifics. produce results range within specificity vs sensitivity space way type type II error difficult ascertain real microbiome data single method used. Recently, consensus approach based multiple differential abundance (DA) methods recently suggested order increase robustness. dar, can use dplyr-like pipeable sequences DA methods apply different consensus strategies. way can obtain reliable results fast, consistent reproducible way.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Differential Abundance Analysis by Consensus","text":"can install development version dar GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"MicrobialGenomics-IrsicaixaOrg/dar\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis by Consensus","text":"","code":"library(dar) #> Registered S3 methods overwritten by 'vegan': #>   method         from       #>   reorder.hclust seriation  #>   rev.hclust     dendextend data(\"metaHIV_phy\")  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\") %>%   step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.03 * length(x))\") %>%   step_metagenomeseq(rm_zeros = 0.01) %>%   step_maaslin()  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Sad_cake  #>      ◉ step_filter_taxa() id = filter_taxa__Malsouka  #>  #> DA steps: #>  #>      ◉ step_metagenomeseq() id = metagenomeseq__Moorkop  #>      ◉ step_maaslin() id = maaslin__Flaugnarde  ## Prep recipe da_results <- prep(rec, parallel = TRUE) da_results #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 278 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ metagenomeseq__Moorkop diff_taxa = 278  #>      ✔ maaslin__Flaugnarde diff_taxa = 205  #>  #>      ℹ 205 taxa are present in all tested methods  ## Consensus strategy n_methods <- 2 da_results <- bake(da_results, count_cutoff = n_methods) da_results #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 278 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ metagenomeseq__Moorkop diff_taxa = 278  #>      ✔ maaslin__Flaugnarde diff_taxa = 205  #>  #>      ℹ 205 taxa are present in all tested methods  #>  #> Bakes: #>  #>      ◉ 1 -> count_cutoff: 2, weights: NULL, exclude: NULL, id: bake__Curry_puff  ## Results cool(da_results) #> ℹ Bake for count_cutoff = 2 #> # A tibble: 205 × 2 #>    taxa_id taxa                              #>    <chr>   <chr>                             #>  1 Otu_1   Methanobrevibacter_smithii        #>  2 Otu_2   Methanosphaera_stadtmanae         #>  3 Otu_10  Bifidobacterium_adolescentis      #>  4 Otu_12  Bifidobacterium_animalis          #>  5 Otu_13  Bifidobacterium_bifidum           #>  6 Otu_15  Bifidobacterium_catenulatum       #>  7 Otu_18  Bifidobacterium_longum            #>  8 Otu_19  Bifidobacterium_pseudocatenulatum #>  9 Otu_34  Olsenella_scatoligenes            #> 10 Otu_35  Collinsella_aerofaciens           #> # … with 195 more rows"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Differential Abundance Analysis by Consensus","text":"think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Working first Pull Request? can learn free series Contribute Open Source Project GitHub","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Differential Abundance Analysis by Consensus","text":"Please note dar project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"Converts SummarizedExperiment Phyloseq object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"","code":"SummarizedExperiment2phyloseq(dataset, assay_idx = 1)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"dataset SummarizedExperiment assay_idx assay index","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/SummarizedExperiment2phyloseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts SummarizedExperiment to a Phyloseq object — SummarizedExperiment2phyloseq","text":"phyloseq","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a New Operation to the Current Recipe — add_step","title":"Add a New Operation to the Current Recipe — add_step","text":"add_step adds step last location recipe. add_check checks.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a New Operation to the Current Recipe — add_step","text":"","code":"add_step(rec, object)  # S4 method for recipe add_step(rec, object)  # S4 method for prep_recipe add_step(rec, object)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a New Operation to the Current Recipe — add_step","text":"rec recipe(). object step check object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a New Operation to the Current Recipe — add_step","text":"updated recipe() new operation last slot.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_tax.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds taxonomic level of interest in the recipe. — add_tax","title":"Adds taxonomic level of interest in the recipe. — add_tax","text":"Adds taxonomic level interest recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_tax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds taxonomic level of interest in the recipe. — add_tax","text":"","code":"add_tax(rec, tax_info)  # S4 method for recipe add_tax(rec, tax_info)  # S4 method for prep_recipe add_tax(rec, tax_info)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_tax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds taxonomic level of interest in the recipe. — add_tax","text":"rec recipe object. tax_info character string taxonomic levels used context.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_tax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds taxonomic level of interest in the recipe. — add_tax","text":"recipe object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_tax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds taxonomic level of interest in the recipe. — add_tax","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy)  ## add var info rec <- add_tax(rec, tax_info = \"Species\") rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ✖ undefined variable of interest. Use add_var() to add to recipe!  #>      ℹ taxonomic level Species  #>  #>   ## add tax info to a prep-recipe returns an error if (FALSE) { data(test_prep_rec) rec <- add_tax(test_prep_rec, tax_info = \"Species\") }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds variable of interest to the recipe — add_var","title":"Adds variable of interest to the recipe — add_var","text":"Adds variable interest recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds variable of interest to the recipe — add_var","text":"","code":"add_var(rec, var_info)  # S4 method for recipe add_var(rec, var_info)  # S4 method for prep_recipe add_var(rec, var_info)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds variable of interest to the recipe — add_var","text":"rec recipe object. var_info character string column names corresponding variables used context.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds variable of interest to the recipe — add_var","text":"recipe object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/add_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds variable of interest to the recipe — add_var","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy)  ## add var info rec <- add_var(rec, var_info = \"RiskGroup2\") rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ✖ undefined taxonomic level. Use add_tax() to add to recipe!  #>   ## add var info to a prep-recipe returns an error if (FALSE) { data(test_prep_rec) rec <- add_var(test_prep_rec, var_info = \"RiskGroup2\") }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":null,"dir":"Reference","previous_headings":"","what":"Define consensus strategies from a recipe — bake","title":"Define consensus strategies from a recipe — bake","text":"prep recipe adds consensus strategies use result extraction.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define consensus strategies from a recipe — bake","text":"","code":"bake(   rec,   count_cutoff = NULL,   weights = NULL,   exclude = NULL,   id = rand_id(\"bake\") )  # S4 method for prep_recipe bake(   rec,   count_cutoff = NULL,   weights = NULL,   exclude = NULL,   id = rand_id(\"bake\") )  # S4 method for recipe bake(   rec,   count_cutoff = NULL,   weights = NULL,   exclude = NULL,   id = rand_id(\"bake\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define consensus strategies from a recipe — bake","text":"rec recipe object. step added sequence operations recipe. count_cutoff Indicates minimum number methods OTU must present (Default: NULL). count_cutoff NULL count_cutoff equal length(steps_ids(rec, \"da\")) - length(exclude) weights Named vector ponderation value method. exclude Method ids exclude. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define consensus strategies from a recipe — bake","text":"object class prep_recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/bake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define consensus strategies from a recipe — bake","text":"","code":"data(test_prep_rec) rec <- test_prep_rec  ## Default bake extracts common OTUs in all DA tested methods  ## (In this case the recipe contains 3 methods) res <- bake(rec) cool(res) #> ℹ Bake for count_cutoff = 3 #> # A tibble: 27 × 2 #>    taxa_id taxa            #>    <chr>   <chr>           #>  1 Otu_34  Olsenella       #>  2 Otu_35  Collinsella     #>  3 Otu_45  Slackia         #>  4 Otu_78  Bacteroides     #>  5 Otu_82  Barnesiella     #>  6 Otu_88  Odoribacter     #>  7 Otu_94  Paraprevotella  #>  8 Otu_96  Prevotella      #>  9 Otu_119 Alistipes       #> 10 Otu_125 Parabacteroides #> # … with 17 more rows  ## We can use the parameter `cout_cutoff` to for example select those OTUs ## shared with at least two methods res <- bake(rec, count_cutoff = 2) cool(res) #> ℹ Bake for count_cutoff = 2 #> # A tibble: 52 × 2 #>    taxa_id taxa            #>    <chr>   <chr>           #>  1 Otu_34  Olsenella       #>  2 Otu_35  Collinsella     #>  3 Otu_45  Slackia         #>  4 Otu_78  Bacteroides     #>  5 Otu_82  Barnesiella     #>  6 Otu_88  Odoribacter     #>  7 Otu_94  Paraprevotella  #>  8 Otu_96  Prevotella      #>  9 Otu_119 Alistipes       #> 10 Otu_125 Parabacteroides #> # … with 42 more rows  ## Furthermore, we can exclude methods from the consensus strategy with the  ## `exclude` parameter. res <- bake(rec, exclude = steps_ids(rec, \"da\")[1]) cool(res) #> ℹ Bake for count_cutoff = 2 #> ℹ Results from maaslin__Prekmurska_gibanica are excluded #> # A tibble: 27 × 2 #>    taxa_id taxa            #>    <chr>   <chr>           #>  1 Otu_34  Olsenella       #>  2 Otu_35  Collinsella     #>  3 Otu_45  Slackia         #>  4 Otu_78  Bacteroides     #>  5 Otu_82  Barnesiella     #>  6 Otu_88  Odoribacter     #>  7 Otu_94  Paraprevotella  #>  8 Otu_96  Prevotella      #>  9 Otu_119 Alistipes       #> 10 Otu_125 Parabacteroides #> # … with 17 more rows  ## Finally, we can use the `weights` parameter to weigh each method. weights <- c(2, 1, 1) names(weights) <- steps_ids(rec, \"da\") res <- bake(rec, weights = weights) cool(res) #> ℹ Bake for count_cutoff = 3 #> # A tibble: 52 × 2 #>    taxa_id taxa            #>    <chr>   <chr>           #>  1 Otu_34  Olsenella       #>  2 Otu_35  Collinsella     #>  3 Otu_45  Slackia         #>  4 Otu_78  Bacteroides     #>  5 Otu_82  Barnesiella     #>  6 Otu_88  Odoribacter     #>  7 Otu_94  Paraprevotella  #>  8 Otu_96  Prevotella      #>  9 Otu_119 Alistipes       #> 10 Otu_125 Parabacteroides #> # … with 42 more rows"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if recipe contains a rarefaction step — contains_rarefaction","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"Checks recipe contains rarefaction step","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"","code":"contains_rarefaction(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"rec recipe object. step added sequence operations recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"boolean","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/contains_rarefaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks if recipe contains a rarefaction step — contains_rarefaction","text":"","code":"data(GlobalPatterns, package = \"phyloseq\") rec <-   phyloseq::subset_samples(     GlobalPatterns, SampleType %in% c(\"Soil\", \"Skin\")   ) %>%   recipe(var_info  = \"SampleType\", tax_info = \"Genus\") %>%   step_rarefaction()  contains_rarefaction(rec) #> [1] TRUE"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract results from defined bake — cool","title":"Extract results from defined bake — cool","text":"Extract results defined bake","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract results from defined bake — cool","text":"","code":"cool(rec, bake = 1)  # S4 method for recipe cool(rec, bake = 1)  # S4 method for prep_recipe cool(rec, bake = 1)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract results from defined bake — cool","text":"rec recipe object. bake Name index bake extract.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract results from defined bake — cool","text":"tbl_df","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/cool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract results from defined bake — cool","text":"","code":"data(test_prep_rec)  ## First we need to add bakes (extraction strategies) to the prep recipe. rec <- bake(test_prep_rec)  ## Finally we can extract the results with the cool method cool(rec) #> ℹ Bake for count_cutoff = 3 #> # A tibble: 27 × 2 #>    taxa_id taxa            #>    <chr>   <chr>           #>  1 Otu_34  Olsenella       #>  2 Otu_35  Collinsella     #>  3 Otu_45  Slackia         #>  4 Otu_78  Bacteroides     #>  5 Otu_82  Barnesiella     #>  6 Otu_88  Odoribacter     #>  7 Otu_94  Paraprevotella  #>  8 Otu_96  Prevotella      #>  9 Otu_119 Alistipes       #> 10 Otu_125 Parabacteroides #> # … with 17 more rows  ## By default cool extracts the results of the first bake. If we have more ## bakes we can extract the one that you want with the bake paramter. rec <- bake(rec, count_cutoff = 1) cool(rec, 2) #> ℹ Bake for count_cutoff = 1 #> # A tibble: 101 × 2 #>    taxa_id taxa            #>    <chr>   <chr>           #>  1 Otu_34  Olsenella       #>  2 Otu_35  Collinsella     #>  3 Otu_45  Slackia         #>  4 Otu_78  Bacteroides     #>  5 Otu_82  Barnesiella     #>  6 Otu_88  Odoribacter     #>  7 Otu_94  Paraprevotella  #>  8 Otu_96  Prevotella      #>  9 Otu_119 Alistipes       #> 10 Otu_125 Parabacteroides #> # … with 91 more rows  ## bake and cool methods needs a prep-recipe. If you pass a a non-prep recipe  ## the output is an error. data(test_rec) if (FALSE) { bake(test_rec) %>% cool() }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/corr_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot otuput of the overlap_df function as a heatmap. — corr_heatmap","title":"Plot otuput of the overlap_df function as a heatmap. — corr_heatmap","text":"Plot otuput overlap_df function heatmap.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/corr_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot otuput of the overlap_df function as a heatmap. — corr_heatmap","text":"","code":"corr_heatmap(rec, steps = steps_ids(rec, \"da\"))  # S4 method for recipe corr_heatmap(rec, steps = steps_ids(rec, \"da\"))  # S4 method for prep_recipe corr_heatmap(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/corr_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot otuput of the overlap_df function as a heatmap. — corr_heatmap","text":"rec recipe object. steps Character vector step_ids take account.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/corr_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot otuput of the overlap_df function as a heatmap. — corr_heatmap","text":"heatmap","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/corr_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot otuput of the overlap_df function as a heatmap. — corr_heatmap","text":"","code":"data(test_prep_rec)  ## Running the function returns a UpSet plot ordered by frequency. corr_heatmap(test_prep_rec)  {\"x\":{\"data\":[{\"x\":[1.75,1,null,1,1,null,1.75,2.5,null,2.5,2.5,null,2.5,2,null,2,2,null,2.5,3,null,3,3],\"y\":[1.34375,1.34375,null,1.34375,0,null,1.34375,1.34375,null,1.34375,0.598941571908746,null,0.598941571908746,0.598941571908746,null,0.598941571908746,0,null,0.598941571908746,0.598941571908746,null,0.598941571908746,0],\"text\":[\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 0.5989416\",\"y: 0.5989416\",null,\"y: 0.5989416\",\"y: 0.5989416\",null,\"y: 0.5989416\",\"y: 0.5989416\",null,\"y: 0.5989416\",\"y: 0.5989416\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.26771653543307,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"(black,solid)\",\"legendgroup\":\"(black,solid)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.75,1,2.5,2,3],\"y\":[1.34375,0,0.598941571908746,0,0],\"text\":[\"y: 1.3437500\",\"y: 0.0000000\",\"y: 0.5989416\",\"y: 0.0000000\",\"y: 0.0000000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"transparent\",\"opacity\":1,\"size\":null,\"symbol\":null,\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"hoveron\":\"points\",\"name\":\"(NA,1)\",\"legendgroup\":\"(NA,1)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(44,160,44,1)\",\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x2\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[1,1,1,2,2,2,3,3,3],\"y\":[1,2,3,1,2,3,1,2,3],\"text\":[\"row: maaslin__Prekmurska_gibanica<br>column: maaslin__Prekmurska_gibanica<br>value: 1.0000 <br> Point size :  1.0000\",\"row: metagenomeseq__Cream_horn<br>column: maaslin__Prekmurska_gibanica<br>value: 0.5149 <br> Point size :  0.5149\",\"row: deseq__Linzer_torte<br>column: maaslin__Prekmurska_gibanica<br>value: 0.2673 <br> Point size :  0.2673\",\"row: maaslin__Prekmurska_gibanica<br>column: metagenomeseq__Cream_horn<br>value: 0.5149 <br> Point size :  0.5149\",\"row: metagenomeseq__Cream_horn<br>column: metagenomeseq__Cream_horn<br>value: 1.0000 <br> Point size :  1.0000\",\"row: deseq__Linzer_torte<br>column: metagenomeseq__Cream_horn<br>value: 0.7525 <br> Point size :  0.7525\",\"row: maaslin__Prekmurska_gibanica<br>column: deseq__Linzer_torte<br>value: 0.2673 <br> Point size :  0.2673\",\"row: metagenomeseq__Cream_horn<br>column: deseq__Linzer_torte<br>value: 0.7525 <br> Point size :  0.7525\",\"row: deseq__Linzer_torte<br>column: deseq__Linzer_torte<br>value: 1.0000 <br> Point size :  1.0000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":[\"rgba(165,0,38,1)\",\"rgba(255,250,183,1)\",\"rgba(146,208,104,1)\",\"rgba(255,250,183,1)\",\"rgba(165,0,38,1)\",\"rgba(249,141,81,1)\",\"rgba(146,208,104,1)\",\"rgba(249,141,81,1)\",\"rgba(165,0,38,1)\"],\"opacity\":1,\"size\":[22.6771653543307,14.7635564167388,3.77952755905512,14.7635564167388,22.6771653543307,19.1571679598123,3.77952755905512,19.1571679598123,22.6771653543307],\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":[\"rgba(165,0,38,1)\",\"rgba(255,250,183,1)\",\"rgba(146,208,104,1)\",\"rgba(255,250,183,1)\",\"rgba(165,0,38,1)\",\"rgba(249,141,81,1)\",\"rgba(146,208,104,1)\",\"rgba(249,141,81,1)\",\"rgba(165,0,38,1)\"]}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1],\"y\":[1],\"name\":\"99_c65d63186f52f2cae800ff5839a482d4\",\"type\":\"scatter\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"skip\",\"showlegend\":false,\"marker\":{\"color\":[0,1],\"colorscale\":[[0,\"#006837\"],[0.00334448160535117,\"#016A38\"],[0.00668896321070234,\"#016B39\"],[0.0100334448160535,\"#026D39\"],[0.0133779264214047,\"#036E3A\"],[0.0167224080267559,\"#04703B\"],[0.020066889632107,\"#04713C\"],[0.0234113712374582,\"#05733D\"],[0.0267558528428094,\"#06753E\"],[0.0301003344481605,\"#07763E\"],[0.0334448160535117,\"#08783F\"],[0.0367892976588629,\"#097940\"],[0.040133779264214,\"#0A7B41\"],[0.0434782608695652,\"#0B7C42\"],[0.0468227424749164,\"#0C7E43\"],[0.0501672240802676,\"#0D8043\"],[0.0535117056856187,\"#0E8144\"],[0.0568561872909699,\"#0F8345\"],[0.0602006688963211,\"#108546\"],[0.0635451505016722,\"#118647\"],[0.0668896321070234,\"#128848\"],[0.0702341137123746,\"#128948\"],[0.0735785953177257,\"#138B49\"],[0.0769230769230769,\"#148D4A\"],[0.0802675585284281,\"#158E4B\"],[0.0836120401337793,\"#16904C\"],[0.0869565217391304,\"#17924D\"],[0.0903010033444816,\"#18934E\"],[0.0936454849498328,\"#18954E\"],[0.096989966555184,\"#19974F\"],[0.100334448160535,\"#1A9850\"],[0.103678929765886,\"#1F9951\"],[0.107023411371237,\"#229B51\"],[0.110367892976589,\"#269C52\"],[0.11371237458194,\"#299D53\"],[0.117056856187291,\"#2C9E53\"],[0.120401337792642,\"#2F9F54\"],[0.123745819397993,\"#32A154\"],[0.127090301003344,\"#35A255\"],[0.130434782608696,\"#38A356\"],[0.133779264214047,\"#3AA456\"],[0.137123745819398,\"#3DA657\"],[0.140468227424749,\"#3FA758\"],[0.1438127090301,\"#42A858\"],[0.147157190635451,\"#44A959\"],[0.150501672240803,\"#46AB5A\"],[0.153846153846154,\"#49AC5A\"],[0.157190635451505,\"#4BAD5B\"],[0.160535117056856,\"#4DAE5B\"],[0.163879598662207,\"#4FB05C\"],[0.167224080267559,\"#52B15D\"],[0.17056856187291,\"#54B25D\"],[0.173913043478261,\"#56B35E\"],[0.177257525083612,\"#58B55F\"],[0.180602006688963,\"#5AB65F\"],[0.183946488294314,\"#5CB760\"],[0.187290969899666,\"#5EB861\"],[0.190635451505017,\"#60B961\"],[0.193979933110368,\"#62BB62\"],[0.197324414715719,\"#64BC62\"],[0.20066889632107,\"#66BD63\"],[0.204013377926421,\"#69BE63\"],[0.207357859531773,\"#6BBF64\"],[0.210702341137124,\"#6DC064\"],[0.214046822742475,\"#70C164\"],[0.217391304347826,\"#72C264\"],[0.220735785953177,\"#74C364\"],[0.224080267558528,\"#76C465\"],[0.22742474916388,\"#79C565\"],[0.230769230769231,\"#7BC665\"],[0.234113712374582,\"#7DC765\"],[0.237458193979933,\"#7FC766\"],[0.240802675585284,\"#81C866\"],[0.244147157190635,\"#83C966\"],[0.247491638795987,\"#86CA66\"],[0.250836120401338,\"#88CB67\"],[0.254180602006689,\"#8ACC67\"],[0.25752508361204,\"#8CCD67\"],[0.260869565217391,\"#8ECE67\"],[0.264214046822742,\"#90CF68\"],[0.267558528428094,\"#92D068\"],[0.270903010033445,\"#94D168\"],[0.274247491638796,\"#96D268\"],[0.277591973244147,\"#98D368\"],[0.280936454849498,\"#9AD469\"],[0.284280936454849,\"#9CD569\"],[0.287625418060201,\"#9FD669\"],[0.290969899665552,\"#A1D669\"],[0.294314381270903,\"#A3D76A\"],[0.297658862876254,\"#A5D86A\"],[0.301003344481605,\"#A7D96A\"],[0.304347826086957,\"#A8DA6B\"],[0.307692307692308,\"#AADB6D\"],[0.311036789297659,\"#ACDB6E\"],[0.31438127090301,\"#ADDC6F\"],[0.317725752508361,\"#AFDD70\"],[0.321070234113712,\"#B1DE71\"],[0.324414715719064,\"#B3DE72\"],[0.327759197324415,\"#B4DF73\"],[0.331103678929766,\"#B6E074\"],[0.334448160535117,\"#B8E175\"],[0.337792642140468,\"#B9E176\"],[0.341137123745819,\"#BBE278\"],[0.344481605351171,\"#BDE379\"],[0.347826086956522,\"#BFE47A\"],[0.351170568561873,\"#C0E47B\"],[0.354515050167224,\"#C2E57C\"],[0.357859531772575,\"#C4E67D\"],[0.361204013377926,\"#C5E77E\"],[0.364548494983278,\"#C7E77F\"],[0.367892976588629,\"#C9E880\"],[0.37123745819398,\"#CAE981\"],[0.374581939799331,\"#CCE983\"],[0.377926421404682,\"#CEEA84\"],[0.381270903010033,\"#D0EB85\"],[0.384615384615385,\"#D1EC86\"],[0.387959866220736,\"#D3EC87\"],[0.391304347826087,\"#D5ED88\"],[0.394648829431438,\"#D6EE89\"],[0.397993311036789,\"#D8EF8A\"],[0.40133779264214,\"#DAEF8C\"],[0.404682274247492,\"#DBF08D\"],[0.408026755852843,\"#DCF08F\"],[0.411371237458194,\"#DDF191\"],[0.414715719063545,\"#DFF193\"],[0.418060200668896,\"#E0F294\"],[0.421404682274247,\"#E1F296\"],[0.424749163879599,\"#E3F398\"],[0.42809364548495,\"#E4F49A\"],[0.431438127090301,\"#E5F49B\"],[0.434782608695652,\"#E6F59D\"],[0.438127090301003,\"#E8F59F\"],[0.441471571906354,\"#E9F6A1\"],[0.444816053511706,\"#EAF6A2\"],[0.448160535117057,\"#EBF7A4\"],[0.451505016722408,\"#EDF7A6\"],[0.454849498327759,\"#EEF8A8\"],[0.45819397993311,\"#EFF8A9\"],[0.461538461538462,\"#F1F9AB\"],[0.464882943143813,\"#F2F9AD\"],[0.468227424749164,\"#F3FAAF\"],[0.471571906354515,\"#F4FAB0\"],[0.474916387959866,\"#F6FBB2\"],[0.478260869565217,\"#F7FCB4\"],[0.481605351170569,\"#F8FCB5\"],[0.48494983277592,\"#F9FDB7\"],[0.488294314381271,\"#FBFDB9\"],[0.491638795986622,\"#FCFEBB\"],[0.494983277591973,\"#FDFEBC\"],[0.498327759197324,\"#FEFFBE\"],[0.501672240802676,\"#FFFEBE\"],[0.505016722408027,\"#FFFDBC\"],[0.508361204013378,\"#FFFCBB\"],[0.511705685618729,\"#FFFBB9\"],[0.51505016722408,\"#FFFAB7\"],[0.518394648829431,\"#FFF9B5\"],[0.521739130434783,\"#FFF8B4\"],[0.525083612040134,\"#FFF7B2\"],[0.528428093645485,\"#FFF6B0\"],[0.531772575250836,\"#FFF5AE\"],[0.535117056856187,\"#FFF4AD\"],[0.538461538461538,\"#FFF3AB\"],[0.54180602006689,\"#FFF2A9\"],[0.545150501672241,\"#FFF1A7\"],[0.548494983277592,\"#FFF0A6\"],[0.551839464882943,\"#FFEFA4\"],[0.555183946488294,\"#FFEEA2\"],[0.558528428093645,\"#FFEDA1\"],[0.561872909698997,\"#FFEC9F\"],[0.565217391304348,\"#FFEB9D\"],[0.568561872909699,\"#FFEA9B\"],[0.57190635451505,\"#FFE99A\"],[0.575250836120401,\"#FFE898\"],[0.578595317725752,\"#FFE796\"],[0.581939799331104,\"#FFE694\"],[0.585284280936455,\"#FEE593\"],[0.588628762541806,\"#FEE391\"],[0.591973244147157,\"#FEE28F\"],[0.595317725752508,\"#FEE18D\"],[0.598662207357859,\"#FEE08C\"],[0.602006688963211,\"#FEDF8A\"],[0.605351170568562,\"#FEDD89\"],[0.608695652173913,\"#FEDC87\"],[0.612040133779264,\"#FEDA86\"],[0.615384615384615,\"#FED884\"],[0.618729096989967,\"#FED783\"],[0.622073578595318,\"#FED582\"],[0.625418060200669,\"#FED380\"],[0.62876254180602,\"#FED27F\"],[0.632107023411371,\"#FED07D\"],[0.635451505016722,\"#FECE7C\"],[0.638795986622074,\"#FECD7B\"],[0.642140468227425,\"#FECB79\"],[0.645484949832776,\"#FEC978\"],[0.648829431438127,\"#FEC876\"],[0.652173913043478,\"#FEC675\"],[0.655518394648829,\"#FEC473\"],[0.658862876254181,\"#FEC372\"],[0.662207357859532,\"#FEC171\"],[0.665551839464883,\"#FEBF6F\"],[0.668896321070234,\"#FEBE6E\"],[0.672240802675585,\"#FEBC6C\"],[0.675585284280936,\"#FEBA6B\"],[0.678929765886288,\"#FEB96A\"],[0.682274247491639,\"#FEB768\"],[0.68561872909699,\"#FEB567\"],[0.688963210702341,\"#FDB466\"],[0.692307692307692,\"#FDB264\"],[0.695652173913043,\"#FDB063\"],[0.698996655518395,\"#FDAF61\"],[0.702341137123746,\"#FDAD60\"],[0.705685618729097,\"#FDAB5F\"],[0.709030100334448,\"#FCA85E\"],[0.712374581939799,\"#FCA65D\"],[0.71571906354515,\"#FCA45C\"],[0.719063545150502,\"#FCA25B\"],[0.722408026755853,\"#FCA05A\"],[0.725752508361204,\"#FB9E59\"],[0.729096989966555,\"#FB9C58\"],[0.732441471571906,\"#FB9A57\"],[0.735785953177257,\"#FB9856\"],[0.739130434782609,\"#FA9655\"],[0.74247491638796,\"#FA9354\"],[0.745819397993311,\"#FA9153\"],[0.749163879598662,\"#F98F52\"],[0.752508361204013,\"#F98D51\"],[0.755852842809364,\"#F98B50\"],[0.759197324414716,\"#F8894F\"],[0.762541806020067,\"#F8874E\"],[0.765886287625418,\"#F8844D\"],[0.769230769230769,\"#F7824C\"],[0.77257525083612,\"#F7804B\"],[0.775919732441472,\"#F77E4A\"],[0.779264214046823,\"#F67B49\"],[0.782608695652174,\"#F67948\"],[0.785953177257525,\"#F67747\"],[0.789297658862876,\"#F57546\"],[0.792642140468227,\"#F57245\"],[0.795986622073579,\"#F47044\"],[0.79933110367893,\"#F46D43\"],[0.802675585284281,\"#F36C42\"],[0.806020066889632,\"#F26A41\"],[0.809364548494983,\"#F16840\"],[0.812709030100334,\"#F0663F\"],[0.816053511705686,\"#EF643E\"],[0.819397993311037,\"#EF633D\"],[0.822742474916388,\"#EE613C\"],[0.826086956521739,\"#ED5F3B\"],[0.82943143812709,\"#EC5D3A\"],[0.832775919732441,\"#EB5B3A\"],[0.836120401337793,\"#EA5939\"],[0.839464882943144,\"#E95738\"],[0.842809364548495,\"#E85537\"],[0.846153846153846,\"#E75336\"],[0.849498327759197,\"#E65135\"],[0.852842809364548,\"#E54F34\"],[0.8561872909699,\"#E44D33\"],[0.859531772575251,\"#E34B32\"],[0.862876254180602,\"#E24931\"],[0.866220735785953,\"#E14730\"],[0.869565217391304,\"#E0452F\"],[0.872909698996655,\"#DF432E\"],[0.876254180602007,\"#DE412D\"],[0.879598662207358,\"#DD3F2C\"],[0.882943143812709,\"#DC3C2C\"],[0.88628762541806,\"#DB3A2B\"],[0.889632107023411,\"#DA382A\"],[0.892976588628763,\"#D93529\"],[0.896321070234114,\"#D83328\"],[0.899665551839465,\"#D73027\"],[0.903010033444816,\"#D52F27\"],[0.906354515050167,\"#D42E27\"],[0.909698996655518,\"#D22C27\"],[0.91304347826087,\"#D02B27\"],[0.916387959866221,\"#CF2A27\"],[0.919732441471572,\"#CD2927\"],[0.923076923076923,\"#CB2727\"],[0.926421404682274,\"#CA2627\"],[0.929765886287625,\"#C82527\"],[0.933110367892977,\"#C62427\"],[0.936454849498328,\"#C52227\"],[0.939799331103679,\"#C32127\"],[0.94314381270903,\"#C11F27\"],[0.946488294314381,\"#BF1E27\"],[0.949832775919732,\"#BE1D27\"],[0.953177257525084,\"#BC1B27\"],[0.956521739130435,\"#BA1A27\"],[0.959866220735786,\"#B91827\"],[0.963210702341137,\"#B71627\"],[0.966555183946488,\"#B51527\"],[0.969899665551839,\"#B41327\"],[0.973244147157191,\"#B21127\"],[0.976588628762542,\"#B10F27\"],[0.979933110367893,\"#AF0D26\"],[0.983277591973244,\"#AD0B26\"],[0.986622073578595,\"#AC0926\"],[0.989966555183946,\"#AA0726\"],[0.993311036789298,\"#A80426\"],[0.996655518394649,\"#A70226\"],[1,\"#A50026\"]],\"colorbar\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"thickness\":23.04,\"title\":\"value\",\"titlefont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"tickmode\":\"array\",\"ticktext\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\",\"1.00\"],\"tickvals\":[0,0.25,0.5,0.75,1],\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"ticklen\":2,\"len\":0.5}},\"xaxis\":\"x\",\"yaxis\":\"y2\",\"frame\":null},{\"x\":[1.34375,1.34375,null,1.34375,0,null,1.34375,1.34375,null,1.34375,0.598941571908746,null,0.598941571908746,0.598941571908746,null,0.598941571908746,0,null,0.598941571908746,0.598941571908746,null,0.598941571908746,0],\"y\":[1.75,1,null,1,1,null,1.75,2.5,null,2.5,2.5,null,2.5,2,null,2,2,null,2.5,3,null,3,3],\"text\":[\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 1.3437500\",\"y: 1.3437500\",null,\"y: 0.5989416\",\"y: 0.5989416\",null,\"y: 0.5989416\",\"y: 0.5989416\",null,\"y: 0.5989416\",\"y: 0.5989416\",null,\"y: 0.5989416\",\"y: 0.5989416\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.26771653543307,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"(black,solid)\",\"legendgroup\":\"(black,solid)\",\"showlegend\":true,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.34375,0,0.598941571908746,0,0],\"y\":[1.75,1,2.5,2,3],\"text\":[\"y: 1.3437500\",\"y: 0.0000000\",\"y: 0.5989416\",\"y: 0.0000000\",\"y: 0.0000000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"transparent\",\"opacity\":1,\"size\":null,\"symbol\":null,\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"hoveron\":\"points\",\"name\":\"(NA,1)\",\"legendgroup\":\"(NA,1)\",\"showlegend\":true,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"xaxis\":{\"domain\":[0,0.8],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,3.6],\"tickmode\":\"array\",\"ticktext\":[\"maaslin__Prekmurska_gibanica\",\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"maaslin__Prekmurska_gibanica\",\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"Arial\",\"size\":13.2835201328352},\"tickangle\":-45,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y2\",\"title\":\"\",\"hoverformat\":\".2f\"},\"xaxis2\":{\"domain\":[0.8,1],\"automargin\":true,\"showticklabels\":false,\"showgrid\":false,\"zeroline\":false,\"anchor\":\"y2\",\"type\":\"linear\",\"autorange\":false,\"range\":[0,1.34375],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.5\",\"1.0\"],\"tickvals\":[0,0.5,1],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.5\",\"1.0\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"gridcolor\":null,\"gridwidth\":0,\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis2\":{\"domain\":[0,0.8],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,3.6],\"tickmode\":\"array\",\"ticktext\":[\"maaslin__Prekmurska_gibanica\",\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"maaslin__Prekmurska_gibanica\",\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"Arial\",\"size\":13.2835201328352},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"\",\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0.8,1],\"automargin\":true,\"showticklabels\":false,\"showgrid\":false,\"zeroline\":false,\"anchor\":\"x\",\"type\":\"linear\",\"autorange\":false,\"range\":[0,1.34375],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.5\",\"1.0\"],\"tickvals\":[0,0.5,1],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.5\",\"1.0\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"gridcolor\":null,\"gridwidth\":0,\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"annotations\":[],\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.8,\"y0\":0.8,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.8,\"y0\":0,\"y1\":0.8},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.8,\"x1\":1,\"y0\":0,\"y1\":0.8}],\"images\":[],\"margin\":{\"t\":0,\"r\":null,\"b\":223.163138231631,\"l\":223.163138231631},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"title\":{\"text\":\"Point size\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"y\":1,\"yanchor\":\"top\"},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"title\":\"\"},\"attrs\":{\"389663738e38\":{\"xend\":{},\"yend\":{},\"colour\":{},\"linetype\":{},\"size\":{},\"x\":{},\"y\":{},\"type\":\"scatter\"},\"3896829ab8f\":{\"colour\":{},\"shape\":{},\"size\":{},\"x\":{},\"y\":{}},\"38962807159f\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20]},\"38963bb1655b\":{\"x\":{},\"y\":{},\"colour\":{},\"text\":{},\"size\":{},\"type\":\"scatter\"},\"389643e76454\":{\"xend\":{},\"yend\":{},\"colour\":{},\"linetype\":{},\"size\":{},\"x\":{},\"y\":{},\"type\":\"scatter\"},\"389635f3f279\":{\"colour\":{},\"shape\":{},\"size\":{},\"x\":{},\"y\":{}}},\"source\":\"A\",\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false,\"displaylogo\":false,\"modeBarButtonsToRemove\":[\"sendDataToCloud\",\"select2d\",\"lasso2d\",\"autoScale2d\",\"hoverClosestCartesian\",\"hoverCompareCartesian\",\"sendDataToCloud\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"subplot\":true,\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}  ## If you want to exclude a method for the plot, you can remove it with the ## step parameter. In the following example we eliminate from the graph the ## results of maaslin corr_heatmap(test_prep_rec, steps = steps_ids(test_prep_rec, \"da\")[-1])  {\"x\":{\"data\":[{\"x\":[1.5,1,null,1,1,null,1.5,2,null,2,2],\"y\":[0.282485875706215,0.282485875706215,null,0.282485875706215,0,null,0.282485875706215,0.282485875706215,null,0.282485875706215,0],\"text\":\"y: 0.2824859\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.26771653543307,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"(black,solid)\",\"legendgroup\":\"(black,solid)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.5,1,2],\"y\":[0.282485875706215,0,0],\"text\":[\"y: 0.2824859\",\"y: 0.0000000\",\"y: 0.0000000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"transparent\",\"opacity\":1,\"size\":null,\"symbol\":null,\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"hoveron\":\"points\",\"name\":\"(NA,1)\",\"legendgroup\":\"(NA,1)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(44,160,44,1)\",\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x2\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[1,1,2,2],\"y\":[1,2,1,2],\"text\":[\"row: metagenomeseq__Cream_horn<br>column: metagenomeseq__Cream_horn<br>value: 1.0000 <br> Point size :  1.0000\",\"row: deseq__Linzer_torte<br>column: metagenomeseq__Cream_horn<br>value: 0.7525 <br> Point size :  0.7525\",\"row: metagenomeseq__Cream_horn<br>column: deseq__Linzer_torte<br>value: 0.7525 <br> Point size :  0.7525\",\"row: deseq__Linzer_torte<br>column: deseq__Linzer_torte<br>value: 1.0000 <br> Point size :  1.0000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":[\"rgba(165,0,38,1)\",\"rgba(249,141,81,1)\",\"rgba(249,141,81,1)\",\"rgba(165,0,38,1)\"],\"opacity\":1,\"size\":[22.6771653543307,3.77952755905512,3.77952755905512,22.6771653543307],\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":[\"rgba(165,0,38,1)\",\"rgba(249,141,81,1)\",\"rgba(249,141,81,1)\",\"rgba(165,0,38,1)\"]}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1],\"y\":[1],\"name\":\"99_c65d63186f52f2cae800ff5839a482d4\",\"type\":\"scatter\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"skip\",\"showlegend\":false,\"marker\":{\"color\":[0,1],\"colorscale\":[[0,\"#006837\"],[0.00334448160535117,\"#016A38\"],[0.00668896321070234,\"#016B39\"],[0.0100334448160535,\"#026D39\"],[0.0133779264214047,\"#036E3A\"],[0.0167224080267559,\"#04703B\"],[0.020066889632107,\"#04713C\"],[0.0234113712374582,\"#05733D\"],[0.0267558528428094,\"#06753E\"],[0.0301003344481605,\"#07763E\"],[0.0334448160535117,\"#08783F\"],[0.0367892976588629,\"#097940\"],[0.040133779264214,\"#0A7B41\"],[0.0434782608695652,\"#0B7C42\"],[0.0468227424749164,\"#0C7E43\"],[0.0501672240802676,\"#0D8043\"],[0.0535117056856187,\"#0E8144\"],[0.0568561872909699,\"#0F8345\"],[0.0602006688963211,\"#108546\"],[0.0635451505016722,\"#118647\"],[0.0668896321070234,\"#128848\"],[0.0702341137123746,\"#128948\"],[0.0735785953177257,\"#138B49\"],[0.0769230769230769,\"#148D4A\"],[0.0802675585284281,\"#158E4B\"],[0.0836120401337793,\"#16904C\"],[0.0869565217391304,\"#17924D\"],[0.0903010033444816,\"#18934E\"],[0.0936454849498328,\"#18954E\"],[0.096989966555184,\"#19974F\"],[0.100334448160535,\"#1A9850\"],[0.103678929765886,\"#1F9951\"],[0.107023411371237,\"#229B51\"],[0.110367892976589,\"#269C52\"],[0.11371237458194,\"#299D53\"],[0.117056856187291,\"#2C9E53\"],[0.120401337792642,\"#2F9F54\"],[0.123745819397993,\"#32A154\"],[0.127090301003344,\"#35A255\"],[0.130434782608696,\"#38A356\"],[0.133779264214047,\"#3AA456\"],[0.137123745819398,\"#3DA657\"],[0.140468227424749,\"#3FA758\"],[0.1438127090301,\"#42A858\"],[0.147157190635451,\"#44A959\"],[0.150501672240803,\"#46AB5A\"],[0.153846153846154,\"#49AC5A\"],[0.157190635451505,\"#4BAD5B\"],[0.160535117056856,\"#4DAE5B\"],[0.163879598662207,\"#4FB05C\"],[0.167224080267559,\"#52B15D\"],[0.17056856187291,\"#54B25D\"],[0.173913043478261,\"#56B35E\"],[0.177257525083612,\"#58B55F\"],[0.180602006688963,\"#5AB65F\"],[0.183946488294314,\"#5CB760\"],[0.187290969899666,\"#5EB861\"],[0.190635451505017,\"#60B961\"],[0.193979933110368,\"#62BB62\"],[0.197324414715719,\"#64BC62\"],[0.20066889632107,\"#66BD63\"],[0.204013377926421,\"#69BE63\"],[0.207357859531773,\"#6BBF64\"],[0.210702341137124,\"#6DC064\"],[0.214046822742475,\"#70C164\"],[0.217391304347826,\"#72C264\"],[0.220735785953177,\"#74C364\"],[0.224080267558528,\"#76C465\"],[0.22742474916388,\"#79C565\"],[0.230769230769231,\"#7BC665\"],[0.234113712374582,\"#7DC765\"],[0.237458193979933,\"#7FC766\"],[0.240802675585284,\"#81C866\"],[0.244147157190635,\"#83C966\"],[0.247491638795987,\"#86CA66\"],[0.250836120401338,\"#88CB67\"],[0.254180602006689,\"#8ACC67\"],[0.25752508361204,\"#8CCD67\"],[0.260869565217391,\"#8ECE67\"],[0.264214046822742,\"#90CF68\"],[0.267558528428094,\"#92D068\"],[0.270903010033445,\"#94D168\"],[0.274247491638796,\"#96D268\"],[0.277591973244147,\"#98D368\"],[0.280936454849498,\"#9AD469\"],[0.284280936454849,\"#9CD569\"],[0.287625418060201,\"#9FD669\"],[0.290969899665552,\"#A1D669\"],[0.294314381270903,\"#A3D76A\"],[0.297658862876254,\"#A5D86A\"],[0.301003344481605,\"#A7D96A\"],[0.304347826086957,\"#A8DA6B\"],[0.307692307692308,\"#AADB6D\"],[0.311036789297659,\"#ACDB6E\"],[0.31438127090301,\"#ADDC6F\"],[0.317725752508361,\"#AFDD70\"],[0.321070234113712,\"#B1DE71\"],[0.324414715719064,\"#B3DE72\"],[0.327759197324415,\"#B4DF73\"],[0.331103678929766,\"#B6E074\"],[0.334448160535117,\"#B8E175\"],[0.337792642140468,\"#B9E176\"],[0.341137123745819,\"#BBE278\"],[0.344481605351171,\"#BDE379\"],[0.347826086956522,\"#BFE47A\"],[0.351170568561873,\"#C0E47B\"],[0.354515050167224,\"#C2E57C\"],[0.357859531772575,\"#C4E67D\"],[0.361204013377926,\"#C5E77E\"],[0.364548494983278,\"#C7E77F\"],[0.367892976588629,\"#C9E880\"],[0.37123745819398,\"#CAE981\"],[0.374581939799331,\"#CCE983\"],[0.377926421404682,\"#CEEA84\"],[0.381270903010033,\"#D0EB85\"],[0.384615384615385,\"#D1EC86\"],[0.387959866220736,\"#D3EC87\"],[0.391304347826087,\"#D5ED88\"],[0.394648829431438,\"#D6EE89\"],[0.397993311036789,\"#D8EF8A\"],[0.40133779264214,\"#DAEF8C\"],[0.404682274247492,\"#DBF08D\"],[0.408026755852843,\"#DCF08F\"],[0.411371237458194,\"#DDF191\"],[0.414715719063545,\"#DFF193\"],[0.418060200668896,\"#E0F294\"],[0.421404682274247,\"#E1F296\"],[0.424749163879599,\"#E3F398\"],[0.42809364548495,\"#E4F49A\"],[0.431438127090301,\"#E5F49B\"],[0.434782608695652,\"#E6F59D\"],[0.438127090301003,\"#E8F59F\"],[0.441471571906354,\"#E9F6A1\"],[0.444816053511706,\"#EAF6A2\"],[0.448160535117057,\"#EBF7A4\"],[0.451505016722408,\"#EDF7A6\"],[0.454849498327759,\"#EEF8A8\"],[0.45819397993311,\"#EFF8A9\"],[0.461538461538462,\"#F1F9AB\"],[0.464882943143813,\"#F2F9AD\"],[0.468227424749164,\"#F3FAAF\"],[0.471571906354515,\"#F4FAB0\"],[0.474916387959866,\"#F6FBB2\"],[0.478260869565217,\"#F7FCB4\"],[0.481605351170569,\"#F8FCB5\"],[0.48494983277592,\"#F9FDB7\"],[0.488294314381271,\"#FBFDB9\"],[0.491638795986622,\"#FCFEBB\"],[0.494983277591973,\"#FDFEBC\"],[0.498327759197324,\"#FEFFBE\"],[0.501672240802676,\"#FFFEBE\"],[0.505016722408027,\"#FFFDBC\"],[0.508361204013378,\"#FFFCBB\"],[0.511705685618729,\"#FFFBB9\"],[0.51505016722408,\"#FFFAB7\"],[0.518394648829431,\"#FFF9B5\"],[0.521739130434783,\"#FFF8B4\"],[0.525083612040134,\"#FFF7B2\"],[0.528428093645485,\"#FFF6B0\"],[0.531772575250836,\"#FFF5AE\"],[0.535117056856187,\"#FFF4AD\"],[0.538461538461538,\"#FFF3AB\"],[0.54180602006689,\"#FFF2A9\"],[0.545150501672241,\"#FFF1A7\"],[0.548494983277592,\"#FFF0A6\"],[0.551839464882943,\"#FFEFA4\"],[0.555183946488294,\"#FFEEA2\"],[0.558528428093645,\"#FFEDA1\"],[0.561872909698997,\"#FFEC9F\"],[0.565217391304348,\"#FFEB9D\"],[0.568561872909699,\"#FFEA9B\"],[0.57190635451505,\"#FFE99A\"],[0.575250836120401,\"#FFE898\"],[0.578595317725752,\"#FFE796\"],[0.581939799331104,\"#FFE694\"],[0.585284280936455,\"#FEE593\"],[0.588628762541806,\"#FEE391\"],[0.591973244147157,\"#FEE28F\"],[0.595317725752508,\"#FEE18D\"],[0.598662207357859,\"#FEE08C\"],[0.602006688963211,\"#FEDF8A\"],[0.605351170568562,\"#FEDD89\"],[0.608695652173913,\"#FEDC87\"],[0.612040133779264,\"#FEDA86\"],[0.615384615384615,\"#FED884\"],[0.618729096989967,\"#FED783\"],[0.622073578595318,\"#FED582\"],[0.625418060200669,\"#FED380\"],[0.62876254180602,\"#FED27F\"],[0.632107023411371,\"#FED07D\"],[0.635451505016722,\"#FECE7C\"],[0.638795986622074,\"#FECD7B\"],[0.642140468227425,\"#FECB79\"],[0.645484949832776,\"#FEC978\"],[0.648829431438127,\"#FEC876\"],[0.652173913043478,\"#FEC675\"],[0.655518394648829,\"#FEC473\"],[0.658862876254181,\"#FEC372\"],[0.662207357859532,\"#FEC171\"],[0.665551839464883,\"#FEBF6F\"],[0.668896321070234,\"#FEBE6E\"],[0.672240802675585,\"#FEBC6C\"],[0.675585284280936,\"#FEBA6B\"],[0.678929765886288,\"#FEB96A\"],[0.682274247491639,\"#FEB768\"],[0.68561872909699,\"#FEB567\"],[0.688963210702341,\"#FDB466\"],[0.692307692307692,\"#FDB264\"],[0.695652173913043,\"#FDB063\"],[0.698996655518395,\"#FDAF61\"],[0.702341137123746,\"#FDAD60\"],[0.705685618729097,\"#FDAB5F\"],[0.709030100334448,\"#FCA85E\"],[0.712374581939799,\"#FCA65D\"],[0.71571906354515,\"#FCA45C\"],[0.719063545150502,\"#FCA25B\"],[0.722408026755853,\"#FCA05A\"],[0.725752508361204,\"#FB9E59\"],[0.729096989966555,\"#FB9C58\"],[0.732441471571906,\"#FB9A57\"],[0.735785953177257,\"#FB9856\"],[0.739130434782609,\"#FA9655\"],[0.74247491638796,\"#FA9354\"],[0.745819397993311,\"#FA9153\"],[0.749163879598662,\"#F98F52\"],[0.752508361204013,\"#F98D51\"],[0.755852842809364,\"#F98B50\"],[0.759197324414716,\"#F8894F\"],[0.762541806020067,\"#F8874E\"],[0.765886287625418,\"#F8844D\"],[0.769230769230769,\"#F7824C\"],[0.77257525083612,\"#F7804B\"],[0.775919732441472,\"#F77E4A\"],[0.779264214046823,\"#F67B49\"],[0.782608695652174,\"#F67948\"],[0.785953177257525,\"#F67747\"],[0.789297658862876,\"#F57546\"],[0.792642140468227,\"#F57245\"],[0.795986622073579,\"#F47044\"],[0.79933110367893,\"#F46D43\"],[0.802675585284281,\"#F36C42\"],[0.806020066889632,\"#F26A41\"],[0.809364548494983,\"#F16840\"],[0.812709030100334,\"#F0663F\"],[0.816053511705686,\"#EF643E\"],[0.819397993311037,\"#EF633D\"],[0.822742474916388,\"#EE613C\"],[0.826086956521739,\"#ED5F3B\"],[0.82943143812709,\"#EC5D3A\"],[0.832775919732441,\"#EB5B3A\"],[0.836120401337793,\"#EA5939\"],[0.839464882943144,\"#E95738\"],[0.842809364548495,\"#E85537\"],[0.846153846153846,\"#E75336\"],[0.849498327759197,\"#E65135\"],[0.852842809364548,\"#E54F34\"],[0.8561872909699,\"#E44D33\"],[0.859531772575251,\"#E34B32\"],[0.862876254180602,\"#E24931\"],[0.866220735785953,\"#E14730\"],[0.869565217391304,\"#E0452F\"],[0.872909698996655,\"#DF432E\"],[0.876254180602007,\"#DE412D\"],[0.879598662207358,\"#DD3F2C\"],[0.882943143812709,\"#DC3C2C\"],[0.88628762541806,\"#DB3A2B\"],[0.889632107023411,\"#DA382A\"],[0.892976588628763,\"#D93529\"],[0.896321070234114,\"#D83328\"],[0.899665551839465,\"#D73027\"],[0.903010033444816,\"#D52F27\"],[0.906354515050167,\"#D42E27\"],[0.909698996655518,\"#D22C27\"],[0.91304347826087,\"#D02B27\"],[0.916387959866221,\"#CF2A27\"],[0.919732441471572,\"#CD2927\"],[0.923076923076923,\"#CB2727\"],[0.926421404682274,\"#CA2627\"],[0.929765886287625,\"#C82527\"],[0.933110367892977,\"#C62427\"],[0.936454849498328,\"#C52227\"],[0.939799331103679,\"#C32127\"],[0.94314381270903,\"#C11F27\"],[0.946488294314381,\"#BF1E27\"],[0.949832775919732,\"#BE1D27\"],[0.953177257525084,\"#BC1B27\"],[0.956521739130435,\"#BA1A27\"],[0.959866220735786,\"#B91827\"],[0.963210702341137,\"#B71627\"],[0.966555183946488,\"#B51527\"],[0.969899665551839,\"#B41327\"],[0.973244147157191,\"#B21127\"],[0.976588628762542,\"#B10F27\"],[0.979933110367893,\"#AF0D26\"],[0.983277591973244,\"#AD0B26\"],[0.986622073578595,\"#AC0926\"],[0.989966555183946,\"#AA0726\"],[0.993311036789298,\"#A80426\"],[0.996655518394649,\"#A70226\"],[1,\"#A50026\"]],\"colorbar\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"thickness\":23.04,\"title\":\"value\",\"titlefont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"tickmode\":\"array\",\"ticktext\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\",\"1.00\"],\"tickvals\":[0,0.25,0.5,0.75,1],\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"ticklen\":2,\"len\":0.5}},\"xaxis\":\"x\",\"yaxis\":\"y2\",\"frame\":null},{\"x\":[0.282485875706215,0.282485875706215,null,0.282485875706215,0,null,0.282485875706215,0.282485875706215,null,0.282485875706215,0],\"y\":[1.5,1,null,1,1,null,1.5,2,null,2,2],\"text\":\"y: 0.2824859\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.26771653543307,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"(black,solid)\",\"legendgroup\":\"(black,solid)\",\"showlegend\":true,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.282485875706215,0,0],\"y\":[1.5,1,2],\"text\":[\"y: 0.2824859\",\"y: 0.0000000\",\"y: 0.0000000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"transparent\",\"opacity\":1,\"size\":null,\"symbol\":null,\"line\":{\"width\":1.88976377952756,\"color\":\"transparent\"}},\"hoveron\":\"points\",\"name\":\"(NA,1)\",\"legendgroup\":\"(NA,1)\",\"showlegend\":true,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"xaxis\":{\"domain\":[0,0.8],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,2.6],\"tickmode\":\"array\",\"ticktext\":[\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"tickvals\":[1,2],\"categoryorder\":\"array\",\"categoryarray\":[\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"Arial\",\"size\":13.2835201328352},\"tickangle\":-45,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y2\",\"title\":\"\",\"hoverformat\":\".2f\"},\"xaxis2\":{\"domain\":[0.8,1],\"automargin\":true,\"showticklabels\":false,\"showgrid\":false,\"zeroline\":false,\"anchor\":\"y2\",\"type\":\"linear\",\"autorange\":false,\"range\":[0,0.282485875706215],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.1\",\"0.2\"],\"tickvals\":[0,0.1,0.2],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.1\",\"0.2\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"gridcolor\":null,\"gridwidth\":0,\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis2\":{\"domain\":[0,0.8],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,2.6],\"tickmode\":\"array\",\"ticktext\":[\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"tickvals\":[1,2],\"categoryorder\":\"array\",\"categoryarray\":[\"metagenomeseq__Cream_horn\",\"deseq__Linzer_torte\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"Arial\",\"size\":13.2835201328352},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"\",\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0.8,1],\"automargin\":true,\"showticklabels\":false,\"showgrid\":false,\"zeroline\":false,\"anchor\":\"x\",\"type\":\"linear\",\"autorange\":false,\"range\":[0,0.282485875706215],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"0.1\",\"0.2\"],\"tickvals\":[0,0.1,0.2],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"0.1\",\"0.2\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.65296803652968,\"tickwidth\":0,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"gridcolor\":null,\"gridwidth\":0,\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"annotations\":[],\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.8,\"y0\":0.8,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.8,\"y0\":0,\"y1\":0.8},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.8,\"x1\":1,\"y0\":0,\"y1\":0.8}],\"images\":[],\"margin\":{\"t\":0,\"r\":null,\"b\":199.252801992528,\"l\":199.252801992528},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"title\":{\"text\":\"Point size\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"y\":1,\"yanchor\":\"top\"},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"title\":\"\"},\"attrs\":{\"3896477b90a8\":{\"xend\":{},\"yend\":{},\"colour\":{},\"linetype\":{},\"size\":{},\"x\":{},\"y\":{},\"type\":\"scatter\"},\"389640a6eb5a\":{\"colour\":{},\"shape\":{},\"size\":{},\"x\":{},\"y\":{}},\"389663928ee2\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20]},\"38964301fa05\":{\"x\":{},\"y\":{},\"colour\":{},\"text\":{},\"size\":{},\"type\":\"scatter\"},\"389629ff72a6\":{\"xend\":{},\"yend\":{},\"colour\":{},\"linetype\":{},\"size\":{},\"x\":{},\"y\":{},\"type\":\"scatter\"},\"38964313c75e\":{\"colour\":{},\"shape\":{},\"size\":{},\"x\":{},\"y\":{}}},\"source\":\"A\",\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false,\"displaylogo\":false,\"modeBarButtonsToRemove\":[\"sendDataToCloud\",\"select2d\",\"lasso2d\",\"autoScale2d\",\"hoverClosestCartesian\",\"hoverCompareCartesian\",\"sendDataToCloud\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"subplot\":true,\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} ## intersection_plt function needs a prep-recipe. If you pass a a non-prep ## recipe the output is an error. data(test_rec) if (FALSE) df <- corr_heatmap(test_rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/dar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dar: Differential Abundance Analysis by Consensus — dar-package","title":"dar: Differential Abundance Analysis by Consensus — dar-package","text":"learn dar, start vignettes: browseVignettes(package = \"dar\")","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/dar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dar: Differential Abundance Analysis by Consensus — dar-package","text":"Maintainer: Francesc Catala-Moll fcatala@irsicaixa.es (ORCID) Authors: Marc Noguera-Julian mnoguera@irsicaixa.es (ORCID)","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-metaHIV_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Phyloseq object from metaHIV project — data-metaHIV_phy","title":"Phyloseq object from metaHIV project — data-metaHIV_phy","text":"Phyloseq object containing abundance counts sample_data metaHIV project. Count reads annotated Metaphlan3.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-metaHIV_phy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phyloseq object from metaHIV project — data-metaHIV_phy","text":"phyloseq object 451 taxas, 30 samples, 3 sample variables 7 taxonomic ranks.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-metaHIV_phy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phyloseq object from metaHIV project — data-metaHIV_phy","text":"s3://fcatala-09142020-eu-west-1/cloud_test/SpeciesQuantification/Kraken2","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-metaHIV_phy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phyloseq object from metaHIV project — data-metaHIV_phy","text":"","code":"data(metaHIV_phy) print(metaHIV_phy) #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-pastry_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Pastery data for step id generation — data-pastry_df","title":"Pastery data for step id generation — data-pastry_df","text":"Tibble contain","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-pastry_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pastery data for step id generation — data-pastry_df","text":"tbl_df object 228 unique pasteries.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-pastry_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pastery data for step id generation — data-pastry_df","text":"https://raw.githubusercontent.com/prasertcbs/basic-dataset/master/pastry.csv","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-test_prep_rec.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep-recipe for metaHIV_phy data — data-test_prep_rec","title":"Prep-recipe for metaHIV_phy data — data-test_prep_rec","text":"recipe created metaHIV_phy object uning \"Riskgroup2\" var_info \"Genus\" tax_info. Also includes step_deseq, step_maaslin step_metagenomeSeq.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-test_prep_rec.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prep-recipe for metaHIV_phy data — data-test_prep_rec","text":"prep-recipe object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-test_rec.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipe for metaHIV_phy data — data-test_rec","title":"Recipe for metaHIV_phy data — data-test_rec","text":"recipe created metaHIV_phy object uning \"Riskgroup2\" var_info \"Genus\" tax_info.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/data-test_rec.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Recipe for metaHIV_phy data — data-test_rec","text":"recipe object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the number of shared DA OTUs between methods. — exclusion_plt","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"Plot number shared DA OTUs methods.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"","code":"exclusion_plt(rec, steps = steps_ids(rec, \"da\"))  # S4 method for recipe exclusion_plt(rec, steps = steps_ids(rec, \"da\"))  # S4 method for prep_recipe exclusion_plt(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"rec recipe object. steps Character vector step_ids take account.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"ggplot2-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/exclusion_plt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the number of shared DA OTUs between methods. — exclusion_plt","text":"","code":"data(test_prep_rec)  ## Running the function returns a barplot plot, exclusion_plt(test_prep_rec)   ## If you want to exclude a method for the plot, you can remove it with the ## step parameter. In the following example we eliminate from the graph the ## results of maaslin exclusion_plt(test_prep_rec, steps = steps_ids(test_prep_rec, \"da\")[-1])   ## intersection_plt function needs a prep-recipe. If you pass a a non-prep ## recipe the output is an error. data(test_rec) if (FALSE) df <- exclusion_plt(test_rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Export step parameters as json. — export_steps","title":"Export step parameters as json. — export_steps","text":"Export step parameters json.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export step parameters as json. — export_steps","text":"","code":"export_steps(rec, file_name)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export step parameters as json. — export_steps","text":"rec recipe object. file_name path file name optout file.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export step parameters as json. — export_steps","text":"invisible","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/export_steps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export step parameters as json. — export_steps","text":"","code":"data(metaHIV_phy)  ## Create a recipe with steps rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.3 * length(x))\") %>%   step_maaslin()   ## Prep recipe    rec <- prep(rec, parallel = TRUE)  ## Export to json file export_steps(rec, tempfile(fileext = \".json\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds common OTU between method results — find_intersections","title":"Finds common OTU between method results — find_intersections","text":"Finds common OTU method results","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds common OTU between method results — find_intersections","text":"","code":"find_intersections(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds common OTU between method results — find_intersections","text":"rec recipe object. steps character vector step ids take account","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds common OTU between method results — find_intersections","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/find_intersections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds common OTU between method results — find_intersections","text":"","code":"data(test_prep_rec)  ## From a prep-recipe we can extract a tibble with all intersections intersections <- find_intersections(test_prep_rec) intersections #> # A tibble: 101 × 4 #>    taxa_id taxa            step_ids                                      sum_m…¹ #>    <chr>   <chr>           <chr>                                           <dbl> #>  1 Otu_34  Olsenella       maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  2 Otu_35  Collinsella     maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  3 Otu_45  Slackia         maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  4 Otu_78  Bacteroides     maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  5 Otu_82  Barnesiella     maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  6 Otu_88  Odoribacter     maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  7 Otu_94  Paraprevotella  maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  8 Otu_96  Prevotella      maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #>  9 Otu_119 Alistipes       maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #> 10 Otu_125 Parabacteroides maaslin__Prekmurska_gibanica, metagenomeseq_…       3 #> # … with 91 more rows, and abbreviated variable name ¹​sum_methods  ## Additionally, we can exclude some methods form the table intersections <- find_intersections(   test_prep_rec,    steps = steps_ids(test_prep_rec, \"da\")[-1] )  intersections #> # A tibble: 52 × 4 #>    taxa_id taxa            step_ids                                      sum_m…¹ #>    <chr>   <chr>           <chr>                                           <dbl> #>  1 Otu_34  Olsenella       metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  2 Otu_35  Collinsella     metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  3 Otu_45  Slackia         metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  4 Otu_78  Bacteroides     metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  5 Otu_82  Barnesiella     metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  6 Otu_88  Odoribacter     metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  7 Otu_94  Paraprevotella  metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  8 Otu_96  Prevotella      metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #>  9 Otu_119 Alistipes       metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #> 10 Otu_125 Parabacteroides metagenomeseq__Cream_horn, deseq__Linzer_tor…       2 #> # … with 42 more rows, and abbreviated variable name ¹​sum_methods"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"Generate unique contrasts levels categorical variable.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"","code":"get_comparisons(var, phy, as_list = TRUE, n_cut = 1)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"var categorical variable phy phyloseq object as_list boolean indicating output must returned list. n_cut minimum observations level.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"tibble list","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all unique contrasts between levels of a categorical variable. — get_comparisons","text":"","code":"if (FALSE) { get_comparisons(\"RiskGroup2\", metaHIV_phy) }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns phyloseq from recipe-class object — get_phy","title":"Returns phyloseq from recipe-class object — get_phy","text":"Returns phyloseq recipe-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns phyloseq from recipe-class object — get_phy","text":"","code":"get_phy(rec)  # S4 method for recipe get_phy(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns phyloseq from recipe-class object — get_phy","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns phyloseq from recipe-class object — get_phy","text":"Phyloseq class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_phy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns phyloseq from recipe-class object — get_phy","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  ## Extract phyloseq object get_phy(rec) #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns tax_info from recipe-class object — get_tax","title":"Returns tax_info from recipe-class object — get_tax","text":"Returns tax_info recipe-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns tax_info from recipe-class object — get_tax","text":"","code":"get_tax(rec)  # S4 method for recipe get_tax(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns tax_info from recipe-class object — get_tax","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns tax_info from recipe-class object — get_tax","text":"Tibble containing tax_info.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_tax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns tax_info from recipe-class object — get_tax","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  ## Extract taxonomic level get_tax(rec) #> # A tibble: 1 × 1 #>   tax_lev #>   <chr>   #> 1 Species"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns var_info from recipe-class object — get_var","title":"Returns var_info from recipe-class object — get_var","text":"Returns var_info recipe-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns var_info from recipe-class object — get_var","text":"","code":"get_var(rec)  # S4 method for recipe get_var(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns var_info from recipe-class object — get_var","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns var_info from recipe-class object — get_var","text":"Tibble containing var_info.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/get_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns var_info from recipe-class object — get_var","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  ## Extract variable of interest get_var(rec) #> # A tibble: 1 × 1 #>   vars       #>   <chr>      #> 1 RiskGroup2"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Import steps from json file — import_steps","title":"Import steps from json file — import_steps","text":"Import steps json file","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import steps from json file — import_steps","text":"","code":"import_steps(rec, file, parallel = TRUE, workers = 8)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import steps from json file — import_steps","text":"rec recipe object. file Path input file. parallel FALSE, palatalization. TRUE, parallel execution using future furrr packages. workers Number workers palatalization.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import steps from json file — import_steps","text":"recipe-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/import_steps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import steps from json file — import_steps","text":"","code":"data(metaHIV_phy)  ## Initialize the recipe with a phyloseq object rec <- recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #>   ## Import steps json_file <- system.file(\"extdata\", \"test.json\", package = \"dar\") rec <- import_steps(rec, json_file) rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Beaver_Tail  #>      ◉ step_filter_taxa() id = filter_taxa__Schuxen  #>  #> DA steps: #>  #>      ◉ step_maaslin() id = maaslin__Prekmurska_gibanica  #>      ◉ step_metagenomeseq() id = metagenomeseq__Cream_horn  #>      ◉ step_deseq() id = deseq__Linzer_torte   ## If the json file contains 'bake', the recipe is automatically prepared.  json_file <- system.file(\"extdata\", \"test_bake.json\", package = \"dar\") rec <- recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    import_steps(json_file) #> ! bakes found in imported recipe #> ℹ running prep()    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 101 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ maaslin__Prekmurska_gibanica diff_taxa = 86  #>      ✔ metagenomeseq__Cream_horn diff_taxa = 69  #>      ✔ deseq__Linzer_torte diff_taxa = 53  #>  #>      ℹ 46 taxa are present in all tested methods  #>  #> Bakes: #>  #>      ◉ 1 -> count_cutoff: NULL, weights: NULL, exclude: NULL, id: bake__Beaver_Tail  cool(rec) #> ℹ Bake for count_cutoff = 3 #> # A tibble: 46 × 2 #>    taxa_id taxa                         #>    <chr>   <chr>                        #>  1 Otu_34  Olsenella_scatoligenes       #>  2 Otu_35  Collinsella_aerofaciens      #>  3 Otu_37  Collinsella_stercoris        #>  4 Otu_45  Slackia_isoflavoniconvertens #>  5 Otu_47  Bacteroides_cellulosilyticus #>  6 Otu_51  Bacteroides_dorei            #>  7 Otu_52  Bacteroides_eggerthii        #>  8 Otu_62  Bacteroides_ovatus           #>  9 Otu_69  Bacteroides_sp_CAG_530       #> 10 Otu_78  Bacteroides_uniformis        #> # … with 36 more rows"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns data.frame with OTU intersection between methods — intersection_df","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"Returns data.frame OTU intersection methods","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"","code":"intersection_df(rec, steps = steps_ids(rec, \"da\"))  # S4 method for recipe intersection_df(rec, steps = steps_ids(rec, \"da\"))  # S4 method for prep_recipe intersection_df(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"rec recipe object. steps character vector step_ids take account.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"data.frame class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns data.frame with OTU intersection between methods — intersection_df","text":"","code":"data(test_prep_rec)  df <- intersection_df(test_prep_rec) head(df) #>   taxa_id maaslin__Prekmurska_gibanica metagenomeseq__Cream_horn #> 1   Otu_1                            1                         1 #> 2  Otu_10                            1                         1 #> 3  Otu_18                            1                         0 #> 4  Otu_34                            1                         1 #> 5  Otu_35                            1                         1 #> 6  Otu_37                            1                         0 #>   deseq__Linzer_torte #> 1                   0 #> 2                   0 #> 3                   0 #> 4                   1 #> 5                   1 #> 6                   0  ## intersection_df function needs a prep-recipe. If you pass a a non-prep ## recipe the output is an error. data(test_rec) if (FALSE) df <- intersection_df(test_rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results using UpSet plot — intersection_plt","title":"Plot results using UpSet plot — intersection_plt","text":"Plot results using UpSet plot","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results using UpSet plot — intersection_plt","text":"","code":"intersection_plt(   rec,   steps = steps_ids(rec, \"da\"),   ordered_by = c(\"freq\", \"degree\") )  # S4 method for recipe intersection_plt(rec, steps)  # S4 method for prep_recipe intersection_plt(   rec,   steps = steps_ids(rec, \"da\"),   ordered_by = c(\"freq\", \"degree\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results using UpSet plot — intersection_plt","text":"rec recipe object. steps Character vector step_ids take account. ordered_by intersections matrix ordered . Options include frequency (entered \"freq\"), degree, order.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results using UpSet plot — intersection_plt","text":"UpSet plot","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/intersection_plt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot results using UpSet plot — intersection_plt","text":"","code":"data(test_prep_rec)  ## Running the function returns a UpSet plot ordered by frequency. intersection_plt(test_prep_rec)   ## Alternatively, you can order the plot by degree intersection_plt(test_prep_rec, ordered_by = \"degree\")   ## If you want to exclude a method for the plot, you can remove it with the ## step parameter. In the following example we eliminate from the graph the ## results of maaslin intersection_plt(test_prep_rec, steps = steps_ids(test_prep_rec, \"da\")[-1])   ## intersection_plt function needs a prep-recipe. If you pass a a non-prep ## recipe the output is an error. data(test_rec) if (FALSE) df <- intersection_plt(test_rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts otu_table from phyloseq inside a recipe — otu_table","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"Extracts otu_table phyloseq inside recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"","code":"otu_table(rec)  # S4 method for recipe otu_table(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"rec recipe recipe step.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/otu_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts otu_table from phyloseq inside a recipe — otu_table","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  ## Extract otu_table from phyloseq object otu_table(rec) #> # A tibble: 451 × 157 #>    taxa_id Sample_186 Sample_185 Sampl…¹ Sampl…² Sampl…³ Sampl…⁴ Sampl…⁵ Sampl…⁶ #>    <chr>        <dbl>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Otu_1         2538          0    9026   12049   22126   15374    5244       0 #>  2 Otu_2            0          0       0     609    2543     988     205       0 #>  3 Otu_3            0          0       0       0       0       0       0       0 #>  4 Otu_4            0          0       0       0       0       0       0       0 #>  5 Otu_5            0          0       0       0       0       0       0       0 #>  6 Otu_6            0          0       0       0       0       0       0       0 #>  7 Otu_7            0          0       0       0       0       0       0       0 #>  8 Otu_8            0          0       0       0       0       0       0       0 #>  9 Otu_9            0          0       0       0       0     351       0       0 #> 10 Otu_10           0          0   10575   10764     504       0   33225       0 #> # … with 441 more rows, 148 more variables: Sample_167 <dbl>, Sample_166 <dbl>, #> #   Sample_165 <dbl>, Sample_164 <dbl>, Sample_163 <dbl>, Sample_162 <dbl>, #> #   Sample_160 <dbl>, Sample_159 <dbl>, Sample_158 <dbl>, Sample_157 <dbl>, #> #   Sample_156 <dbl>, Sample_155 <dbl>, Sample_153 <dbl>, Sample_152 <dbl>, #> #   Sample_151 <dbl>, Sample_150 <dbl>, Sample_149 <dbl>, Sample_148 <dbl>, #> #   Sample_147 <dbl>, Sample_146 <dbl>, Sample_145 <dbl>, Sample_143 <dbl>, #> #   Sample_142 <dbl>, Sample_141 <dbl>, Sample_140 <dbl>, Sample_139 <dbl>, …"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/overlap_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Overlap of significant OTUs between tested methods. — overlap_df","title":"Overlap of significant OTUs between tested methods. — overlap_df","text":"Overlap significant OTUs tested methods.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/overlap_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overlap of significant OTUs between tested methods. — overlap_df","text":"","code":"overlap_df(rec, steps = steps_ids(rec, \"da\"))  # S4 method for recipe overlap_df(rec, steps = steps_ids(rec, \"da\"))  # S4 method for prep_recipe overlap_df(rec, steps = steps_ids(rec, \"da\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/overlap_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overlap of significant OTUs between tested methods. — overlap_df","text":"rec recipe object. steps Character vector step_ids take account.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/overlap_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overlap of significant OTUs between tested methods. — overlap_df","text":"df","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/overlap_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overlap of significant OTUs between tested methods. — overlap_df","text":"","code":"data(test_prep_rec)  ## Running the function returns a UpSet plot ordered by frequency. df <- overlap_df(test_prep_rec, steps_ids(test_prep_rec, \"da\")) head(df) #>                              maaslin__Prekmurska_gibanica #> maaslin__Prekmurska_gibanica                    1.0000000 #> metagenomeseq__Cream_horn                       0.5148515 #> deseq__Linzer_torte                             0.2673267 #>                              metagenomeseq__Cream_horn deseq__Linzer_torte #> maaslin__Prekmurska_gibanica                 0.5148515           0.2673267 #> metagenomeseq__Cream_horn                    1.0000000           0.7524752 #> deseq__Linzer_torte                          0.7524752           1.0000000  ## If you want to exclude a method for the plot, you can remove it with the ## step parameter. In the following example we eliminate from the graph the ## results of maaslin overlap_df(test_prep_rec, steps = steps_ids(test_prep_rec, \"da\")[-1]) #>                           metagenomeseq__Cream_horn deseq__Linzer_torte #> metagenomeseq__Cream_horn                 1.0000000           0.7524752 #> deseq__Linzer_torte                       0.7524752           1.0000000  ## overlap_df function needs a prep-recipe. If you pass a a non-prep ## recipe the output is an error. data(test_rec) if (FALSE) df <- overlap_df(test_rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe operator — %>%","text":"","code":"# Basic use: iris %>% head #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5          5.0         3.6          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa  # Use with lhs as first argument iris %>% head(10) #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1           5.1         3.5          1.4         0.2  setosa #> 2           4.9         3.0          1.4         0.2  setosa #> 3           4.7         3.2          1.3         0.2  setosa #> 4           4.6         3.1          1.5         0.2  setosa #> 5           5.0         3.6          1.4         0.2  setosa #> 6           5.4         3.9          1.7         0.4  setosa #> 7           4.6         3.4          1.4         0.3  setosa #> 8           5.0         3.4          1.5         0.2  setosa #> 9           4.4         2.9          1.4         0.2  setosa #> 10          4.9         3.1          1.5         0.1  setosa  # Using the dot place-holder \"Ceci n'est pas une pipe\" %>% gsub(\"une\", \"un\", .) #> [1] \"Ceci n'est pas un pipe\"  # When dot is nested, lhs is still placed first: sample(1:10) %>% paste0(LETTERS[.]) #>  [1] \"2B\"  \"5E\"  \"3C\"  \"4D\"  \"10J\" \"7G\"  \"1A\"  \"9I\"  \"6F\"  \"8H\"   # This can be avoided: rnorm(100) %>% {c(min(.), mean(.), max(.))} %>% floor #> [1] -3  0  2  # Lambda expressions: iris %>%    {      size <- sample(1:10, size = 1)      rbind(head(., size), tail(., size))    } #>     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species #> 1            5.1         3.5          1.4         0.2    setosa #> 2            4.9         3.0          1.4         0.2    setosa #> 3            4.7         3.2          1.3         0.2    setosa #> 4            4.6         3.1          1.5         0.2    setosa #> 147          6.3         2.5          5.0         1.9 virginica #> 148          6.5         3.0          5.2         2.0 virginica #> 149          6.2         3.4          5.4         2.3 virginica #> 150          5.9         3.0          5.1         1.8 virginica    # renaming in lambdas: iris %>%   {     my_data <- .     size <- sample(1:10, size = 1)     rbind(head(my_data, size), tail(my_data, size))   } #>     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species #> 1            5.1         3.5          1.4         0.2    setosa #> 2            4.9         3.0          1.4         0.2    setosa #> 149          6.2         3.4          5.4         2.3 virginica #> 150          5.9         3.0          5.1         1.8 virginica    # Building unary functions with %>% trig_fest <- . %>% tan %>% cos %>% sin  1:10 %>% trig_fest #>  [1]  0.0133878 -0.5449592  0.8359477  0.3906486 -0.8257855  0.8180174 #>  [7]  0.6001744  0.7640323  0.7829771  0.7153150  trig_fest(1:10) #>  [1]  0.0133878 -0.5449592  0.8359477  0.3906486 -0.8257855  0.8180174 #>  [7]  0.6001744  0.7640323  0.7829771  0.7153150"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs all the steps defined in a recipe — prep","title":"Performs all the steps defined in a recipe — prep","text":"recipe least one preprocessing DA operation run steps convenient order.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs all the steps defined in a recipe — prep","text":"","code":"prep(rec, parallel = TRUE, workers = 8, force = FALSE)  # S4 method for recipe prep(rec, parallel = TRUE, workers = 8, force = FALSE)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs all the steps defined in a recipe — prep","text":"rec recipe object. furrr packages. parallel FALSE, palatalization. TRUE, parallel execution using future furrr packages. workers Number workers palatalization. force Force reexecution steps. remove previous results.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs all the steps defined in a recipe — prep","text":"prep_recipe object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs all the steps defined in a recipe — prep","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\") %>%   step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.03 * length(x))\") %>%   step_maaslin()  ## Prep recipe da_results <- prep(rec)  ## If you try  ## Consensus strategy n_methods <- 2 da_results <- bake(da_results, count_cutoff = n_methods) da_results #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 278 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ maaslin__Welsh_cake diff_taxa = 146  #>  #>      ℹ 146 taxa are present in all tested methods  #>  #> Bakes: #>  #>      ◉ 1 -> count_cutoff: 2, weights: NULL, exclude: NULL, id: bake__Pecan_pie   ## If you try to run prep on an object of class prep_recipe it returns an error. if (FALSE) prep(da_results)  ## You can force the overwrite with: prep(rec, force = TRUE) #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 278 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ maaslin__Welsh_cake diff_taxa = 146  #>  #>      ℹ 146 taxa are present in all tested methods  #>   ## This function can operate in parallel thanks to future and furrr packages. prep(rec, parallel = TRUE, workers = 2) #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 278 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ maaslin__Welsh_cake diff_taxa = 146  #>  #>      ℹ 146 taxa are present in all tested methods  #>"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe-class.html","id":null,"dir":"Reference","previous_headings":"","what":"prep_recipe-class object — prep_recipe-class","title":"prep_recipe-class object — prep_recipe-class","text":"prep_recipe recipe results corresponding steps defined recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"prep_recipe-class object — prep_recipe-class","text":"results Contains results defined analysis recipe. bakes Contains executed bakes.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe prep_recipe. — prep_recipe","title":"Create a recipe prep_recipe. — prep_recipe","text":"prep_recipe recipe results corresponding steps defined recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe prep_recipe. — prep_recipe","text":"","code":"prep_recipe(rec, results, bakes)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe prep_recipe. — prep_recipe","text":"rec recipe object. results list results bakes list saved bakes","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe prep_recipe. — prep_recipe","text":"object class prep_recipe.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a random identification field for steps — rand_id","title":"Make a random identification field for steps — rand_id","text":"Make random identification field steps","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a random identification field for steps — rand_id","text":"","code":"rand_id(prefix = \"step\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a random identification field for steps — rand_id","text":"prefix single character string","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a random identification field for steps — rand_id","text":"character string prefix random letters separated underscore. character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/rand_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a random identification field for steps — rand_id","text":"","code":"rand_id(\"step\") #> [1] \"step__Mazarin\""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads Phyloseq data — read_data","title":"Loads Phyloseq data — read_data","text":"function returns validated Phyloseq object loading directly file .rds extension. Alternatively, function can also take three text files input used construct validate Phyloseq object: - Counts matrix otu_id first column. - Taxonomic annotation matrix otu_id first column. - Metadata annotation sample_id first column.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads Phyloseq data — read_data","text":"","code":"read_data(data_path)  validate_otu(otu)  validate_sample_data(sample_data)  validate_tax_table(tax_table)  validate_phyloseq(phy, slots = c(\"sample_data\", \"tax_table\"))  read_phyloseq(file_path)  read_file(file_path, ext = c(\".txt|.csv|.tsv\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads Phyloseq data — read_data","text":"data_path List length 1 3, paths input files.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads Phyloseq data — read_data","text":"phylseq-class object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads Phyloseq data — read_data","text":"","code":"# From a phyloseq object saved with .rds extension. system.file(\"extdata\", \"metaHIV_phy.rds\", package = \"dar\") %>%   read_data() #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]  # From the three components of a phyloseq object saved as a plain text. data_path <- c(   system.file(\"extdata\", \"metaHIV_counts.txt\", package = \"dar\"),   system.file(\"extdata\", \"metaHIV_metadata.txt\", package = \"dar\"),   system.file(\"extdata\", \"metaHIV_taxas.txt\", package = \"dar\") )  read_data(data_path) #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 451 taxa and 156 samples ] #> sample_data() Sample Data:       [ 156 samples by 3 sample variables ] #> tax_table()   Taxonomy Table:    [ 451 taxa by 7 taxonomic ranks ]"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe-class.html","id":null,"dir":"Reference","previous_headings":"","what":"recipe-class object — phyloseq_or_null-class","title":"recipe-class object — phyloseq_or_null-class","text":"recipe description steps applied data set order prepare data analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"recipe-class object — phyloseq_or_null-class","text":"phyloseq Phyloseq-class object var_info tibble contains current set terms data set. initially defaults data contained var_info. tax_info tibble contains current set taxonomic levels used analysis. steps List step-class objects used DA.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing data — recipe","title":"Create a recipe for preprocessing data — recipe","text":"recipe description steps applied data set order prepare data analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing data — recipe","text":"","code":"recipe(phyloseq = NULL, var_info = NULL, tax_info = NULL, steps = list())"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing data — recipe","text":"phyloseq Phyloseq-class object. var_info character string column names corresponding variables used context. tax_info character string taxonomic levels used context. steps list steps.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing data — recipe","text":"object class recipe sub-objects: phyloseq object class phyloseq taxa abundance information. var_info tibble contains current set terms data set. initially defaults data contained var_info. tax_info tibble contains current set taxonomic levels used analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a recipe for preprocessing data — recipe","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\") %>%   step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.3 * length(x))\") %>%   step_metagenomeseq(rm_zeros = 0.01) %>%   step_maaslin()  ## Prep recipe da_results <- prep(rec)  ## Consensus strategy n_methods <- 2 da_results <- bake(da_results, count_cutoff = n_methods)  ## Results cool(da_results) #> ℹ Bake for count_cutoff = 2 #> # A tibble: 66 × 2 #>    taxa_id taxa                         #>    <chr>   <chr>                        #>  1 Otu_34  Olsenella_scatoligenes       #>  2 Otu_35  Collinsella_aerofaciens      #>  3 Otu_37  Collinsella_stercoris        #>  4 Otu_39  [Collinsella]_massiliensis   #>  5 Otu_45  Slackia_isoflavoniconvertens #>  6 Otu_46  Bacteroides_caccae           #>  7 Otu_47  Bacteroides_cellulosilyticus #>  8 Otu_51  Bacteroides_dorei            #>  9 Otu_52  Bacteroides_eggerthii        #> 10 Otu_62  Bacteroides_ovatus           #> # … with 56 more rows  ## You can also crate a recipe without var and tax info rec <- recipe(metaHIV_phy)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ✖ undefined variable of interest. Use add_var() to add to recipe!  #>      ✖ undefined taxonomic level. Use add_tax() to add to recipe!  #>   ## And define them later rec <- rec %>%   add_var(\"RiskGroup2\") %>%   add_tax(\"Genus\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Genus  #>  #>   ## When trying to add an identical step to an existing one, the system  ## returns an information message. rec <- step_ancom(rec) rec <- step_ancom(rec) #> ! This step is already defined with the same parameters and will be skipped:  #> rec %>% dar:::step_ancom(formula = RiskGroup2, p_adj_method = 'holm', zero_cut = 0.9, lib_cut = 0, group = NULL, struc_zero = FALSE, neg_lb = FALSE, tol = 1e-05, max_iter = 100, conserve = FALSE, alpha = 0.05, global = FALSE, rarefy = FALSE)  ## The same with bake da_results <- bake(da_results) da_results <- bake(da_results) #> ! This step is already defined with the same parameters and will be skipped:  #> rec %>% dar:::step_bake(count_cutoff = NULL, weights = NULL, exclude = NULL)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Update packages — recipes_pkg_check","title":"Update packages — recipes_pkg_check","text":"check see required packages installed.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update packages — recipes_pkg_check","text":"","code":"recipes_pkg_check(pkg = NULL, step_name, ...)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update packages — recipes_pkg_check","text":"pkg character string package checked step_name Name step. ... Extra arguments pass utils::install.packages()","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/recipes_pkg_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update packages — recipes_pkg_check","text":"Nothing returned message printed console packages () installed along code .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns required pakcages for recipe object — required_deps","title":"Returns required pakcages for recipe object — required_deps","text":"Returns required pakcages recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns required pakcages for recipe object — required_deps","text":"","code":"required_deps(rec)  # S4 method for recipe required_deps(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns required pakcages for recipe object — required_deps","text":"rec recipe object","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns required pakcages for recipe object — required_deps","text":"character","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/required_deps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns required pakcages for recipe object — required_deps","text":"","code":"data(test_rec)  ## The function returns instructions to install any uninstalled dependencies  ## needed to run the recipe steps required_deps(test_rec)  ## The function also works with prep_recipe-class objects data(test_prep_rec) required_deps(test_prep_rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts sample_data from phyloseq inside a recipe — sample_data","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"Extracts sample_data phyloseq inside recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"","code":"sample_data(rec)  # S4 method for recipe sample_data(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"rec recipe recipe step.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/sample_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts sample_data from phyloseq inside a recipe — sample_data","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  ## Extract sample_data from phyloseq object sample_data(rec) #> # A tibble: 156 × 2 #>    sample_id  RiskGroup2 #>    <chr>      <chr>      #>  1 Sample_186 msm        #>  2 Sample_185 msm        #>  3 Sample_184 hts        #>  4 Sample_182 pwid       #>  5 Sample_181 msm        #>  6 Sample_170 msm        #>  7 Sample_169 msm        #>  8 Sample_168 pwid       #>  9 Sample_167 hts        #> 10 Sample_166 msm        #> # … with 146 more rows"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":null,"dir":"Reference","previous_headings":"","what":"Overall Wrappers to Make New step_X or check_Y Objects — step","title":"Overall Wrappers to Make New step_X or check_Y Objects — step","text":"step sets class step check checks.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overall Wrappers to Make New step_X or check_Y Objects — step","text":"","code":"step(subclass, ..., .prefix = \"step_\")  check(subclass, ..., .prefix = \"check_\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overall Wrappers to Make New step_X or check_Y Objects — step","text":"subclass character string resulting class. example, subclass = \"blah\" step object returned class step_blah check_blah depending context. ... arguments operator returned. .prefix Prefix subclass created.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overall Wrappers to Make New step_X or check_Y Objects — step","text":"updated step check new class.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":null,"dir":"Reference","previous_headings":"","what":"ALDEx2 analysis — step_aldex","title":"ALDEx2 analysis — step_aldex","text":"differential abundance analysis comparison two conditions. example, single-organism meta-RNA-seq high-throughput sequencing assays, selected unselected values -vitro sequence selections. Uses Dirichlet-multinomial model infer abundance counts, optimized three experimental replicates. Infers sampling variation calculates expected false discovery rate given biological sampling variation using Wilcox rank test Welches t-test (aldex.ttest) glm Kruskal Wallis tests (aldex.glm). Reports P fdr values calculated Benjamini Hochberg correction (supported dar package).","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ALDEx2 analysis — step_aldex","text":"","code":"step_aldex(   rec,   max_significance = 0.05,   mc.samples = 128,   denom = \"all\",   rarefy = FALSE,   id = rand_id(\"aldex\") )  # S4 method for recipe step_aldex(   rec,   max_significance = 0.05,   mc.samples = 128,   denom = \"all\",   rarefy = FALSE,   id = rand_id(\"aldex\") )  # S4 method for prep_recipe step_aldex(   rec,   max_significance = 0.05,   mc.samples = 128,   denom = \"all\",   rarefy = FALSE,   id = rand_id(\"aldex\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ALDEx2 analysis — step_aldex","text":"rec recipe object. step added sequence operations recipe. max_significance Benjamini-Hochberg corrected P value Welch’s t test cutoff. mc.samples number Monte Carlo instances use estimate underlying distributions; since estimating central tendencies, 128 usually sufficient, larger numbers may . denom variable (, iqlr, zero, lvha, median, user) indicating features use denominator Geometric Mean calculation default \"\" uses geometric mean abundance features. Using \"median\" returns median abundance features. Using \"iqlr\" uses features first third quartile variance clr values across samples. Using \"zero\" uses non-zero features grop denominator. approach extreme case many nonzero features one condition many zeros another. Using \"lvha\" uses features low variance (bottom quartile) high relative abundance (top quartile every sample). also possible supply vector row indices use denominator. , experimentalist determining -priori rows thought invariant. case RNA-seq, include ribosomal protein genes house-keeping genes. used caution offsets may different original data data used function features 0 samples removed aldex.clr. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ALDEx2 analysis — step_aldex","text":"object class recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ALDEx2 analysis — step_aldex","text":"run_aldex function wrapper performs log-ratio transformation statistical testing single line code. Specifically, function: () generates Monte Carlo samples Dirichlet distribution sample, (b) converts instance using log-ratio transform, (c) returns test results two sample (Welch's t, Wilcoxon) test. function also estimates effect size two sample analyses.","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_aldex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ALDEx2 analysis — step_aldex","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.4 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Pineapple_bun  #>      ◉ step_filter_taxa() id = filter_taxa__Cornish_pasty  #>  #> DA steps: #>   ## Define ALDEX step with default parameters and prep rec <-    step_aldex(rec) %>%    prep(parallel = TRUE)    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 76 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ aldex__Chorley_cake diff_taxa = 46  #>  #>      ℹ 46 taxa are present in all tested methods  #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_aldex(rec, rarefy = TRUE)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>  #> DA steps: #>  #>      ◉ step_aldex() id = aldex__Puff_pastry"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":null,"dir":"Reference","previous_headings":"","what":"ANCOM analysis — step_ancom","title":"ANCOM analysis — step_ancom","text":"function performs analysis composition microbiomes (ANCOM). ANCOM accounts underlying structure data can used comparing composition microbiomes two populations. ANCOM makes distributional assumptions can implemented linear model framework adjust covariates well model longitudinal data.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANCOM analysis — step_ancom","text":"","code":"step_ancom(   rec,   formula = get_var(rec),   p_adj_method = \"holm\",   zero_cut = 0.9,   lib_cut = 0,   group = NULL,   struc_zero = FALSE,   neg_lb = FALSE,   tol = 1e-05,   max_iter = 100,   conserve = FALSE,   alpha = 0.05,   global = FALSE,   rarefy = FALSE,   id = rand_id(\"ancom\") )  # S4 method for recipe step_ancom(   rec,   formula = get_var(rec),   p_adj_method = \"holm\",   zero_cut = 0.9,   lib_cut = 0,   group = NULL,   struc_zero = FALSE,   neg_lb = FALSE,   tol = 1e-05,   max_iter = 100,   conserve = FALSE,   alpha = 0.05,   global = FALSE,   rarefy = FALSE,   id = rand_id(\"ancom\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANCOM analysis — step_ancom","text":"rec recipe object. step added sequence operations recipe. formula character string expresses microbial absolute abundances taxon depend variables metadata. p_adj_method method adjust p-values . Default \"holm\". Options include \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\". See p.adjust details. zero_cut numerical fraction 0 1. Taxa proportion zeroes greater zero_cut excluded analysis. Default 0.90. lib_cut numerical threshold filtering samples based library sizes. Samples library sizes less lib_cut excluded analysis. Default 0, .e. filter sample. group name group variable metadata. Specifying group required detecting structural zeros performing global test. struc_zero whether detect structural zeros. Default FALSE. neg_lb whether classify taxon structural zero corresponding study group using asymptotic lower bound. Default FALSE. tol iteration convergence tolerance E-M algorithm. Default 1e-05. max_iter maximum number iterations E-M algorithm. Default 100. conserve whether use conservative variance estimate test statistic. recommended sample size small /number differentially abundant taxa believed large. Default FALSE. alpha level significance. Default 0.05. global whether perform global test. Default FALSE. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANCOM analysis — step_ancom","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_ancom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANCOM analysis — step_ancom","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.4 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Toaster_pastry  #>      ◉ step_filter_taxa() id = filter_taxa__Djevrek  #>  #> DA steps: #>   ## Define step with default parameters and prep rec <-    step_ancom(rec) %>%    prep(parallel = TRUE) #> Registered S3 methods overwritten by 'proxy': #>   method               from     #>   print.registry_field registry #>   print.registry_entry registry #> Error in ANCOMBC::ancombc(phyloseq = s_phy, formula = var, p_adj_method = p_adj_method,     zero_cut = zero_cut, lib_cut = lib_cut, group = group, struc_zero = struc_zero,     neg_lb = neg_lb, tol = tol, max_iter = max_iter, conserve = conserve,     alpha = alpha, global = global): unused argument (zero_cut = zero_cut)    rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Toaster_pastry  #>      ◉ step_filter_taxa() id = filter_taxa__Djevrek  #>  #> DA steps: #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_ancom(rec, rarefy = TRUE)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>  #> DA steps: #>  #>      ◉ step_ancom() id = ancom__Bakpia_Pathok"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":null,"dir":"Reference","previous_headings":"","what":"corncob analysis — step_corncob","title":"corncob analysis — step_corncob","text":"Corncob individual taxon regression model uses abundance tables sample data. corncob able model differential abundance differential variability, addresses challenges presented .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"corncob analysis — step_corncob","text":"","code":"step_corncob(   rec,   phi.formula = stats::formula(~1),   formula_null = stats::formula(~1),   phi.formula_null = stats::formula(~1),   link = \"logit\",   phi.link = \"logit\",   test = \"Wald\",   boot = FALSE,   B = 1000,   filter_discriminant = TRUE,   fdr_cutoff = 0.05,   fdr = \"fdr\",   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"corncob\") )  # S4 method for recipe step_corncob(   rec,   phi.formula = stats::formula(~1),   formula_null = stats::formula(~1),   phi.formula_null = stats::formula(~1),   link = \"logit\",   phi.link = \"logit\",   test = \"Wald\",   boot = FALSE,   B = 1000,   filter_discriminant = TRUE,   fdr_cutoff = 0.05,   fdr = \"fdr\",   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"corncob\") )  # S4 method for prep_recipe step_corncob(   rec,   phi.formula = stats::formula(~1),   formula_null = stats::formula(~1),   phi.formula_null = stats::formula(~1),   link = \"logit\",   phi.link = \"logit\",   test = \"Wald\",   boot = FALSE,   B = 1000,   filter_discriminant = TRUE,   fdr_cutoff = 0.05,   fdr = \"fdr\",   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"corncob\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"corncob analysis — step_corncob","text":"rec recipe object. step added sequence operations recipe. phi.formula object class formula without response: symbolic description model fitted dispersion. formula_null Formula mean null, without response. phi.formula_null Formula overdispersion null, without response. link Link function abundance covariates, defaults \"logit\". phi.link Link function dispersion covariates, defaults \"logit\". test Character. Hypothesis testing procedure use. One \"Wald\" \"LRT\" (likelihood ratio test). boot Boolean. Defaults FALSE. Indicator whether use parametric bootstrap algorithm. (See pbWald pbLRT). B Optional integer. Number bootstrap iterations. Ignored boot FALSE. Otherwise, defaults 1000. filter_discriminant Boolean. Defaults TRUE. FALSE, discriminant taxa filtered . fdr_cutoff Integer. Defaults 0.05. Desired type 1 error rate. fdr Character. Defaults \"fdr\". False discovery rate control method, see p.adjust options. log2FC log2FC cutoff. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"corncob analysis — step_corncob","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_corncob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"corncob analysis — step_corncob","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.3 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Apple_strudel  #>      ◉ step_filter_taxa() id = filter_taxa__Bichon_au_citron  #>  #> DA steps: #>   ## Define step with default parameters and prep rec <-    step_corncob(rec) %>%    prep(parallel = TRUE) #> Error in dar:::run_corncob(., phi.formula = ~1, formula_null = ~1, phi.formula_null = ~1,     link = \"logit\", phi.link = \"logit\", test = \"Wald\", boot = FALSE,     B = 1000, filter_discriminant = TRUE, fdr_cutoff = 0.05,     fdr = \"fdr\", log2FC = 0, rarefy = FALSE): ! Temporarily the version of the package detectseparation must be v0.2, #>   but you have the version 0.3 installed. #> • Please first run remove.packages(\"detectseparation\"). #> • Finally install the necessary version with #>   devtools::install_version(\"detectseparation\", version = 0.2).    rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Apple_strudel  #>      ◉ step_filter_taxa() id = filter_taxa__Bichon_au_citron  #>  #> DA steps: #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_corncob(rec, rarefy = TRUE)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>  #> DA steps: #>  #>      ◉ step_corncob() id = corncob__Streusel"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":null,"dir":"Reference","previous_headings":"","what":"DESeq2 analysis — step_deseq","title":"DESeq2 analysis — step_deseq","text":"Differential expression analysis based Negative Binomial (.k.. Gamma-Poisson) distribution. function performs default analysis steps: 1) estimation size factors: estimateSizeFactors. 2) estimation dispersion: estimateDispersions. 3) Negative Binomial GLM fitting Wald statistics: nbinomWaldTest. complete details step, see manual pages respective functions. DESeq function returns DESeqDataSet object, results tables (log2 fold changes p-values) can generated using results function. Shrunken LFC can generated using lfcShrink function.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DESeq2 analysis — step_deseq","text":"","code":"step_deseq(   rec,   test = \"Wald\",   fitType = \"parametric\",   betaPrior = FALSE,   type = \"ashr\",   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"deseq\") )  # S4 method for recipe step_deseq(   rec,   test = \"Wald\",   fitType = \"parametric\",   betaPrior = FALSE,   type = \"ashr\",   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"deseq\") )  # S4 method for prep_recipe step_deseq(   rec,   test = \"Wald\",   fitType = \"parametric\",   betaPrior = FALSE,   type = \"ashr\",   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   id = rand_id(\"deseq\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DESeq2 analysis — step_deseq","text":"rec recipe object. step added sequence operations recipe. test Either \"Wald\" \"LRT\", use either Wald significance tests (defined nbinomWaldTest), likelihood ratio test difference deviance full reduced model formula (defined nbinomLRT). fitType either \"parametric\", \"local\", \"mean\", \"glmGamPoi\" type fitting dispersions mean intensity. See estimateDispersions description. betaPrior whether put zero-mean normal prior non-intercept coefficients See nbinomWaldTest description calculation beta prior. versions >=1.16, default set FALSE, shrunken LFCs obtained afterwards using lfcShrink. type \"apeglm\" adaptive Student's t prior shrinkage estimator 'apeglm' package; \"ashr\" adaptive shrinkage estimator 'ashr' package, using fitted mixture normals prior - see Stephens (2016) reference citation; \"normal\" 2014 DESeq2 shrinkage estimator using Normal prior. max_significance q-value threshold significance. log2FC log2FC cutoff. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DESeq2 analysis — step_deseq","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_deseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DESeq2 analysis — step_deseq","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.4 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Crêpes_Suzette  #>      ◉ step_filter_taxa() id = filter_taxa__Suncake  #>  #> DA steps: #>   ## Define step with default parameters and prep rec <-    step_deseq(rec) %>%    prep(parallel = TRUE)    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 76 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ deseq__Flaky_pastry diff_taxa = 42  #>  #>      ℹ 42 taxa are present in all tested methods  #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_deseq(rec, rarefy = TRUE)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>  #> DA steps: #>  #>      ◉ step_deseq() id = deseq__Danish_pastry"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"function directly analogous genefilter function microarray filtering, used filtering OTUs phyloseq objects. applies arbitrary set functions — function list, instance, created filterfun — across-sample criteria, one OTU time. takes input phyloseq object, returns logical vector indicating whether OTU passed criteria. Alternatively, \"prune\" option set FALSE, returns already-trimmed version phyloseq object.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"","code":"step_filter_taxa(rec, .f, id = rand_id(\"filter_taxa\"))  # S4 method for recipe step_filter_taxa(rec, .f, id = rand_id(\"filter_taxa\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"rec recipe object. step added sequence operations recipe. .f function list functions take vector abundance values return logical. canned useful function types included genefilter-package. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_filter_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter taxa based on across-sample OTU abundance criteria — step_filter_taxa","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <- recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #>   ## Define filter taxa step with default parameters rec <-  step_filter_taxa(rec, .f = \"function(x) sum(x > 0) >= (0.03 * length(x))\") rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_filter_taxa() id = filter_taxa__Crocetta_of_Caltanissetta  #>  #> DA steps: #>"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":null,"dir":"Reference","previous_headings":"","what":"lefse analysis — step_lefse","title":"lefse analysis — step_lefse","text":"Lefser metagenomic biomarker discovery tool based LEfSe tool published Huttenhower et al. 2011. Lefser R implementation LEfSe method. Using statistical analyses, lefser compares microbial populations healthy diseased subjects discover differencially expressed microorganisms. Lefser computes effect size, estimates magnitude differential expression populations differentially expressed microorganism. Subclasses classes can also assigned used within analysis.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lefse analysis — step_lefse","text":"","code":"step_lefse(   rec,   kruskal.threshold = 0.05,   wilcox.threshold = 0.05,   lda.threshold = 2,   blockCol = NULL,   assay = 1L,   trim.names = FALSE,   rarefy = TRUE,   id = rand_id(\"lefse\") )  # S4 method for recipe step_lefse(   rec,   kruskal.threshold = 0.05,   wilcox.threshold = 0.05,   lda.threshold = 2,   blockCol = NULL,   assay = 1L,   trim.names = FALSE,   rarefy = TRUE,   id = rand_id(\"lefse\") )  # S4 method for prep_recipe step_lefse(   rec,   kruskal.threshold = 0.05,   wilcox.threshold = 0.05,   lda.threshold = 2,   blockCol = NULL,   assay = 1L,   trim.names = FALSE,   rarefy = TRUE,   id = rand_id(\"lefse\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lefse analysis — step_lefse","text":"rec recipe object. step added sequence operations recipe. kruskal.threshold numeric(1) p-value Kruskal-Wallis Rank Sum Test (default 0.05). wilcox.threshold numeric(1) p-value Wilcoxon Rank-Sum Test 'blockCol' present (default 0.05). lda.threshold numeric(1) effect size threshold (default 2.0). blockCol character(1) Optional column name 'colData(expr)' indicating blocks, usually factor two levels (e.g., 'c(\"adult\", \"senior\")'; default NULL). assay -th assay matrix ‘SummarizedExperiment' (’expr'; default 1). trim.names 'TRUE' extracts specific taxonomic rank organism. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lefse analysis — step_lefse","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_lefse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lefse analysis — step_lefse","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.3 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Crêpes_Suzette  #>      ◉ step_filter_taxa() id = filter_taxa__Karakudamono  #>  #> DA steps: #>   ## Define step with default parameters and prep rec <-    step_lefse(rec) %>%    prep(parallel = TRUE)    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 101 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ lefse__Spina_santa diff_taxa = 76  #>  #>      ℹ 76 taxa are present in all tested methods  #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_lefse(rec, rarefy = TRUE)  ## Running lefse without rarefaction (not recommended) rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_lefse(rec, rarefy = FALSE) #> ! Run lefse without rarefaction is not recommended (id = lefse__Mooncake)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":null,"dir":"Reference","previous_headings":"","what":"MaAsLin2 analysis — step_maaslin","title":"MaAsLin2 analysis — step_maaslin","text":"MaAsLin2 finds associations microbiome meta-omics features complex metadata population-scale epidemiological studies. software includes multiple analysis methods (including support multiple covariates repeated measures), filtering, normalization, transform options customize analysis specific study.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MaAsLin2 analysis — step_maaslin","text":"","code":"step_maaslin(   rec,   min_abundance = 0,   min_prevalence = 0.1,   min_variance = 0,   normalization = \"TSS\",   transform = \"LOG\",   analysis_method = \"LM\",   max_significance = 0.25,   random_effects = NULL,   correction = \"BH\",   standardize = TRUE,   reference = NULL,   rarefy = FALSE,   id = rand_id(\"maaslin\") )  # S4 method for recipe step_maaslin(   rec,   min_abundance = 0,   min_prevalence = 0.1,   min_variance = 0,   normalization = \"TSS\",   transform = \"LOG\",   analysis_method = \"LM\",   max_significance = 0.25,   random_effects = NULL,   correction = \"BH\",   standardize = TRUE,   reference = NULL,   rarefy = FALSE,   id = rand_id(\"maaslin\") )  # S4 method for prep_recipe step_maaslin(   rec,   min_abundance = 0,   min_prevalence = 0.1,   min_variance = 0,   normalization = \"TSS\",   transform = \"LOG\",   analysis_method = \"LM\",   max_significance = 0.25,   random_effects = NULL,   correction = \"BH\",   standardize = TRUE,   reference = NULL,   rarefy = FALSE,   id = rand_id(\"maaslin\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MaAsLin2 analysis — step_maaslin","text":"rec recipe object. step added sequence operations recipe. min_abundance minimum abundance feature. min_prevalence minimum percent samples feature detected minimum abundance. min_variance Keep features variance greater . normalization normalization method apply. transform transform apply. analysis_method transform apply. max_significance q-value threshold significance. random_effects random effects model, comma-delimited multiple effects. correction correction method computing q-value. standardize Apply z-score continuous metadata scale. reference factor use reference variable two levels provided string 'variable,reference' semi-colon delimited multiple variables. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MaAsLin2 analysis — step_maaslin","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_maaslin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MaAsLin2 analysis — step_maaslin","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.4 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Pastizz  #>      ◉ step_filter_taxa() id = filter_taxa__Pie  #>  #> DA steps: #>   ## Define step with default parameters and prep rec <-    step_maaslin(rec) %>%    prep(parallel = TRUE)    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 76 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ maaslin__Knieküchle diff_taxa = 65  #>  #>      ℹ 65 taxa are present in all tested methods  #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_maaslin(rec, rarefy = TRUE)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>  #> DA steps: #>  #>      ◉ step_maaslin() id = maaslin__Burek"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"MetagenomeSeq analysis — step_metagenomeseq","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"metagenomeSeq designed determine features (Operational Taxanomic Unit (OTU), species, etc.) differentially abundant two groups multiple samples. metagenomeSeq designed address effects normalization -sampling microbial communities disease association detection testing feature correlations.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"","code":"step_metagenomeseq(   rec,   zeroMod = NULL,   useCSSoffset = TRUE,   useMixedModel = FALSE,   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   rm_zeros = 0,   id = rand_id(\"metagenomeseq\") )  # S4 method for recipe step_metagenomeseq(   rec,   zeroMod = NULL,   useCSSoffset = TRUE,   useMixedModel = FALSE,   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   rm_zeros = 0,   id = rand_id(\"metagenomeseq\") )  # S4 method for prep_recipe step_metagenomeseq(   rec,   zeroMod = NULL,   useCSSoffset = TRUE,   useMixedModel = FALSE,   max_significance = 0.05,   log2FC = 0,   rarefy = FALSE,   rm_zeros = 0,   id = rand_id(\"metagenomeseq\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"rec recipe object. step added sequence operations recipe. zeroMod zero model, model account change number OTUs observed linear effect depth coverage. useCSSoffset Boolean, whether include default scaling parameters model . useMixedModel Estimate correlation duplicate features replicates using duplicateCorrelation. max_significance q-value threshold significance. log2FC log2FC cutoff. rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. rm_zeros Proportion samples level 0 counts. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_metagenomeseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MetagenomeSeq analysis — step_metagenomeseq","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.02 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Boyoz  #>      ◉ step_filter_taxa() id = filter_taxa__Gulab_jamun  #>  #> DA steps: #>   ## Define step with default parameters and prep rec <-    step_metagenomeseq(rec, rm_zeros = 0.01) %>%    prep(parallel = TRUE) #> Warning: NaNs produced    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 291 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ metagenomeseq__Nunt diff_taxa = 244  #>  #>      ℹ 244 taxa are present in all tested methods  #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_metagenomeseq(rec, rarefy = TRUE)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>  #> DA steps: #>  #>      ◉ step_metagenomeseq() id = metagenomeseq__Flaons"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"Please note authors phyloseq advocate using normalization procedure, despite recent popularity. justifications using alternative approaches address disparities library sizes made available article PLoS Computational Biology. See phyloseq_to_deseq2 recommended alternative rarefying directly supported phyloseq package, well supplemental materials PLoS-CB article phyloseq extensions repository GitHub. Nevertheless, comparison demonstration, rarefying procedure implemented good faith options hope useful. function uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. kind resampling can performed without replacement, replacement computationally-efficient, default setting. See replace parameter documentation details. recommended explicitly select random number generator seed invoking function, , alternatively, explicitly provide single positive integer argument rngseed.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"","code":"step_rarefaction(rec, id = rand_id(\"rarefaction\"))  # S4 method for recipe step_rarefaction(rec, id = rand_id(\"rarefaction\"))  # S4 method for prep_recipe step_rarefaction(rec, id = rand_id(\"rarefaction\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"rec recipe object. step added sequence operations recipe. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"object class recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_rarefaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample an OTU table such that all samples have the same library size. — step_rarefaction","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #>   ## Define step with default parameters and prep rec <-    step_rarefaction(rec) %>%    prep(parallel = TRUE)    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset species by taxonomic expression — step_subset_taxa","title":"Subset species by taxonomic expression — step_subset_taxa","text":"convenience wrapper around subset function. intended speed subsetting complex experimental objects one function call. case subset_taxa, subsetting based expression related columns values within tax_table (taxonomyTable component) slot physeq. OTUs retained dataset equivalent x[subset & !.na(subset)], x vector OTU IDs subset logical results subsetting expression. important keep mind, users often unaware subsetting step also removes/omits OTUs missing value result, NA, somewhere expression.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset species by taxonomic expression — step_subset_taxa","text":"","code":"step_subset_taxa(rec, expr, id = rand_id(\"subset_taxa\"))  # S4 method for recipe step_subset_taxa(rec, expr, id = rand_id(\"subset_taxa\"))"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset species by taxonomic expression — step_subset_taxa","text":"rec recipe object. step added sequence operations recipe. expr subsetting expression applied taxonomyTable. passed subset, details examples functions can found documentation. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset species by taxonomic expression — step_subset_taxa","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_subset_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset species by taxonomic expression — step_subset_taxa","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <- recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #>   ## Define subset taxa step with default parameters rec <- step_subset_taxa(rec, expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Jalebi  #>  #> DA steps: #>"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts parameters from steps and makes a character vector with the\nexpression to evaluate — step_to_expr","title":"Extracts parameters from steps and makes a character vector with the\nexpression to evaluate — step_to_expr","text":"Extracts parameters steps makes character vector expression evaluate","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts parameters from steps and makes a character vector with the\nexpression to evaluate — step_to_expr","text":"","code":"step_to_expr(step)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts parameters from steps and makes a character vector with the\nexpression to evaluate — step_to_expr","text":"step object class step","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_to_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts parameters from steps and makes a character vector with the\nexpression to evaluate — step_to_expr","text":"character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcox analysis — step_wilcox","title":"Wilcox analysis — step_wilcox","text":"Performs wilcox test determine features (Operational Taxanomic Unit (OTU), species, etc.) differentially abundant two groups multiple samples.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcox analysis — step_wilcox","text":"","code":"step_wilcox(   rec,   norm_method = \"compositional\",   max_significance = 0.05,   p_adj_method = \"BH\",   rarefy = TRUE,   id = rand_id(\"wilcox\") )  # S4 method for recipe step_wilcox(   rec,   norm_method = \"compositional\",   max_significance = 0.05,   p_adj_method = \"BH\",   rarefy = TRUE,   id = rand_id(\"wilcox\") )  # S4 method for prep_recipe step_wilcox(   rec,   norm_method = \"compositional\",   max_significance = 0.05,   p_adj_method = \"BH\",   rarefy = TRUE,   id = rand_id(\"wilcox\") )"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcox analysis — step_wilcox","text":"rec recipe object. step added sequence operations recipe. norm_method Transformation apply. options include: 'compositional' (ie relative abundance), 'Z', 'log10', 'log10p', 'hellinger', 'identity', 'clr', 'alr', method vegan::decostand function. max_significance q-value threshold significance. p_adj_method Character. Specifying method adjust p-values multiple comparisons. Default “BH” (Benjamini-Hochberg procedure). rarefy Boolean indicating OTU counts must rarefyed. rarefaction uses standard R sample function resample abundance values otu_table component first argument, physeq. Often one major goals procedure achieve parity total number counts samples, alternative formal normalization procedures, single value sample.size expected. id character string unique step identify .","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcox analysis — step_wilcox","text":"object class recipe","code":""},{"path":[]},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/step_wilcox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wilcox analysis — step_wilcox","text":"","code":"data(metaHIV_phy)  ## Init recipe rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_subset_taxa(expr = 'Kingdom %in% c(\"Bacteria\", \"Archaea\")') %>%   step_filter_taxa(.f = \"function(x) sum(x > 0) >= (0.4 * length(x))\")  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>      ◉ step_subset_taxa() id = subset_taxa__Trdelník  #>      ◉ step_filter_taxa() id = filter_taxa__Pot_pie  #>  #> DA steps: #>   ## Define step with default parameters and prep rec <-    step_wilcox(rec) %>%    prep(parallel = TRUE)    rec #> ── DAR Results ───────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 76 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Results: #>  #>      ✔ wilcox__Kolompeh diff_taxa = 59  #>  #>      ℹ 59 taxa are present in all tested methods  #>   ## Wearing rarefaction only for this step  rec <-    recipe(metaHIV_phy, \"RiskGroup2\", \"Species\") %>%    step_wilcox(rec, rarefy = TRUE)  rec #> ── DAR Recipe ────────────────────────────────────────────────────────────────── #> Inputs: #>  #>      ℹ phyloseq object with 451 taxa and 156 samples  #>      ℹ variable of interes RiskGroup2 (class: character, levels: hts, msm, pwid)  #>      ℹ taxonomic level Species  #>  #> Preporcessing steps: #>  #>  #> DA steps: #>  #>      ◉ step_wilcox() id = wilcox__Carac"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get step_ids from recipe — steps_ids","title":"Get step_ids from recipe — steps_ids","text":"Get step_ids recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get step_ids from recipe — steps_ids","text":"","code":"steps_ids(rec, type = \"all\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get step_ids from recipe — steps_ids","text":"rec recipe object. type character vector indicating type class. Options c(\"\", \"da\", \"prepro\").","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get step_ids from recipe — steps_ids","text":"character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/steps_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get step_ids from recipe — steps_ids","text":"","code":"data(test_rec)  ## We can extract the step identifiers from a recipe with `step_ids` ids <- steps_ids(test_rec) ids #> [1] \"subset_taxa__Beaver_Tail\"     \"filter_taxa__Schuxen\"         #> [3] \"maaslin__Prekmurska_gibanica\" \"metagenomeseq__Cream_horn\"    #> [5] \"deseq__Linzer_torte\"           ## With the `type` parameter, extract the prepro and da steps separately. da_ids <- steps_ids(test_rec, type = \"da\") da_ids #> [1] \"maaslin__Prekmurska_gibanica\" \"metagenomeseq__Cream_horn\"    #> [3] \"deseq__Linzer_torte\"           prepro_ids <- steps_ids(test_rec, type = \"prepro\") prepro_ids #> [1] \"subset_taxa__Beaver_Tail\" \"filter_taxa__Schuxen\""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts tax_table from phyloseq inside a recipe — tax_table","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"Extracts tax_table phyloseq inside recipe","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"","code":"tax_table(rec)  # S4 method for recipe tax_table(rec)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"rec recipe recipe step.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tax_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts tax_table from phyloseq inside a recipe — tax_table","text":"","code":"data(metaHIV_phy)  ## Define recipe rec <-   recipe(metaHIV_phy, var_info = \"RiskGroup2\", tax_info = \"Species\")  ## Extract tax_table from phyloseq object tax_table(rec) #> # A tibble: 451 × 2 #>    taxa_id taxa                          #>    <chr>   <chr>                         #>  1 Otu_1   Methanobrevibacter_smithii    #>  2 Otu_2   Methanosphaera_stadtmanae     #>  3 Otu_3   Actinomyces_odontolyticus     #>  4 Otu_4   Actinomyces_radicidentis      #>  5 Otu_5   Actinomyces_sp_HPA0247        #>  6 Otu_6   Actinomyces_sp_oral_taxon_181 #>  7 Otu_7   Actinomyces_turicensis        #>  8 Otu_8   Aeriscardovia_aeriphila       #>  9 Otu_9   Alloscardovia_omnicolens      #> 10 Otu_10  Bifidobacterium_adolescentis  #> # … with 441 more rows"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/tidyeval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy eval helpers — tidyeval","text":"","code":"# `enquo()` defuses the expression supplied by your user f <- function(arg) {   rlang::enquo(arg) }  f(1 + 1) #> <quosure> #> expr: ^1 + 1 #> env:  0x55c9b25a3008  # `enquos()` works with arguments and dots. It returns a list of # expressions f <- function(...) {   rlang::enquos(...) }  f(1 + 1, 2 * 10) #> <list_of<quosure>> #>  #> [[1]] #> <quosure> #> expr: ^1 + 1 #> env:  0x55c9b25a3008 #>  #> [[2]] #> <quosure> #> expr: ^2 * 10 #> env:  0x55c9b25a3008 #>   # Let's create some symbols: foo <- quote(foo) bar <- rlang::sym(\"bar\")  # as_name() converts symbols to strings: foo #> foo  rlang::as_name(foo) #> [1] \"foo\"  typeof(bar) #> [1] \"symbol\"  typeof(rlang::as_name(bar)) #> [1] \"character\"  # as_name() unwraps quosured symbols automatically: rlang::as_name(rlang::quo(foo)) #> [1] \"foo\"  # as_label() is useful with quoted expressions: rlang::as_label(rlang::expr(foo(bar))) #> [1] \"foo(bar)\"  rlang::as_label(rlang::expr(foobar)) #> [1] \"foobar\"  # It works with any R object. This is also useful for quoted # arguments because the user might unquote constant objects: rlang::as_label(1:3) #> [1] \"<int>\"  rlang::as_label(base::list) #> [1] \"<fn>\""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to convert phyloseq slots to tibble — to_tibble","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"Wrapper convert phyloseq slots tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"","code":"to_tibble(df, id_name = \"otu_id\")"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"df output otu_table(), sample_data() tax_table() phyloseq functions. id_name Name new column generated rownames","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"tibble","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/to_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to convert phyloseq slots to tibble — to_tibble","text":"","code":"if (FALSE) { to_tibble(phyloseq::otu_table(metaHIV_phy)) }"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/zero_otu.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract outs with all 0 values in at least on level of the variable — zero_otu","title":"Extract outs with all 0 values in at least on level of the variable — zero_otu","text":"Extract outs 0 values least level variable","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/zero_otu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract outs with all 0 values in at least on level of the variable — zero_otu","text":"","code":"zero_otu(obj, var = NULL, pct_cutoff = 0)  # S4 method for recipe zero_otu(obj, var = NULL, pct_cutoff = 0)  # S4 method for phyloseq zero_otu(obj, var = NULL, pct_cutoff = 0)"},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/zero_otu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract outs with all 0 values in at least on level of the variable — zero_otu","text":"obj recipe phyloseq object. var Variable interest. Must present metadata. pct_cutoff Minimum pct counts samples counts taxa.","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/reference/zero_otu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract outs with all 0 values in at least on level of the variable — zero_otu","text":"character vector","code":""},{"path":"https://microbialgenomics-irsicaixaorg.github.io/dar/news/index.html","id":"dar-0009000","dir":"Changelog","previous_headings":"","what":"dar 0.0.0.9000","title":"dar 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
